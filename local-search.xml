<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title> 如何让系统u盘重新可用 </title>
    <link href="/2024/09/28/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%B3%BB%E7%BB%9Fu%E7%9B%98%E9%87%8D%E6%96%B0%E5%8F%AF%E7%94%A8/"/>
    <url>/2024/09/28/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%B3%BB%E7%BB%9Fu%E7%9B%98%E9%87%8D%E6%96%B0%E5%8F%AF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>我们将 u 盘制作为系统 U 盘后，U盘就没法在电脑中正常识别出了。当装完系统，不再需要 u 盘充当系统 U盘想要正常使用该 U 盘，这时候就需要有些操作，让这个 U 盘正常化。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110907621.webp" alt="Snipaste_2024-09-11_08-22-08.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-22-08.png</figcaption></figure><p>上图就是充当系统盘的 u 盘，无法正常使用。</p><h1 id="开始操作">开始操作</h1><p>还是 win + R，输入 cmd。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110906938.webp" alt="Snipaste_2024-09-11_09-06-13.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_09-06-13.png</figcaption></figure><p>输入 diskpart 指令，回车，点击确定。接着就会出现下面的界面。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110909558.webp" alt="Snipaste_2024-09-11_08-21-04.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-21-04.png</figcaption></figure><p>接着输入，<code>list disk</code>。就是显示电脑安装的所有磁盘。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110909921.webp" alt="Snipaste_2024-09-11_08-21-27.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-21-27.png</figcaption></figure><p>看大小其实就知道哪个是 U 盘，显然最小的就是 U 盘。</p><p>使用 <code>select disk 磁盘号</code>指令来选择磁盘，一定要选对，记住信息无价，弄错了就 GG 了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110912276.webp" alt="Snipaste_2024-09-11_08-21-49.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-21-49.png</figcaption></figure><p>选择对应的磁盘。</p><p>输入 <code>clean</code> 指令。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110913749.webp" alt="Snipaste_2024-09-11_08-23-48.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-23-48.png</figcaption></figure><p>这时候其实电脑还是看不到 U 盘的，因为还没有格式化。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110913753.webp" alt="Snipaste_2024-09-11_08-25-56.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-25-56.png</figcaption></figure><p>输入 <code>create partition primary</code> 来创建分区，然后<code>list partition</code> 来查看分区，接着<code>select partition 分区号</code> 来选择分区。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110915813.webp" alt="Snipaste_2024-09-11_08-26-02.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-26-02.png</figcaption></figure><p>最后输入 <code>format quick</code> 进行格式化。</p><p>这时候我们打开此电脑就能看到能够正常使用的 U 盘了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110915233.webp" alt="Snipaste_2024-09-11_08-25-41.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-25-41.png</figcaption></figure><h1 id="遇到的错误">遇到的错误</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110916931.webp" alt="Snipaste_2024-09-11_08-22-36.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-22-36.png</figcaption></figure><p>输入 clean 时候也可能遇到上面的问题，这是因为你提早关闭了 cmd窗口，也就是下面这个，再次重复上述步骤，但是别管 cmd窗口，就能解决问题。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409110917537.webp" alt="Snipaste_2024-09-11_08-23-36.png"><figcaption aria-hidden="true">Snipaste_2024-09-11_08-23-36.png</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>U盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>存储</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Anki自动生成语音</title>
    <link href="/2024/08/23/Anki%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E8%AF%AD%E9%9F%B3/"/>
    <url>/2024/08/23/Anki%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E8%AF%AD%E9%9F%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>已经实现了通过[[使用Obsidian实现Anki快速制卡]]。</p><p>对于语言学习，仅仅只有不同语言文字的对照是不够的，我们还需要声音。</p><p>所以就需要加入音频。</p><p>幸好 Anki 插件十分丰富。</p><h1 id="安装插件">安装插件</h1><p>这里我们使用 <em>AwesomeTTS 插件</em>进行音频生成。</p><p>此为插件链接 <a href="https://ankiweb.net/shared/info/1436550454">AwesomeTTS - Addspeech to your flashcards - AnkiWeb</a>。</p><p>先安装插件，如有不会请先看 [[Anki如何安装插件]]。</p><p>安装后点击 Anki 中的<em>浏览</em>。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232132355.webp" alt="Snipaste_2024-08-23_21-31-50.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-31-50.png</figcaption></figure><p>可以看到多了一个 AwesomeTTS 选项。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232132488.webp" alt="Snipaste_2024-08-23_21-32-35.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-32-35.png</figcaption></figure><p>这就说明安装成功了。</p><h1 id="制作音频">制作音频</h1><p>这个插件制作音频是开箱即用的，非常简单。</p><p>先选中一些卡片，然后点击 AwesomeTTS 中的 <em>Add Audio toSelected</em>。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232134751.webp" alt="Snipaste_2024-08-23_21-34-07.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-34-07.png</figcaption></figure><p>进入下面的界面。</p><p>Generate Using 是选择你要用的语音模型，我这里用 Azure，这个是需要 API的。还可以用 <em>Google Translate</em>，这个不需要API，免费的，不过如果一次生成太多的卡片，会有个sleep，需要等挺长时间的。</p><p>Voice是声音，选择你需要的语言，语言一定要选对，不然会很奇怪。不同人物音色是不同的。</p><p>下面的 sava 可以保存声音的设置，下次生成就不用调整了。</p><p>最后单击 Generate，生成声音。可能会出现sleep，让你等待，那就耐心等待，这个是因为一次请求太多了，一次生成十个卡片以上就会出现，换个付费的语音模型可以避免。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232138300.webp" alt="Snipaste_2024-08-23_21-37-41.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-37-41.png</figcaption></figure><p>如果卡片后面出现 sound: xxx.mp3，这就说明语音生成成功了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232145443.webp" alt="Snipaste_2024-08-23_21-45-03.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-45-03.png</figcaption></figure><p>预览卡片，我们也能看到播放图标了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232144737.webp" alt="Snipaste_2024-08-23_21-38-04.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-38-04.png</figcaption></figure><h1 id="一些注意事项">一些注意事项</h1><p>有些事情是需要注意的。</p><h2 id="语音消失现象">语音消失现象</h2><p>有时候会出现单词后面的 xxx.mp3这个音频不见的情况，一般是相同标签下再次点击制卡的时候，不用担心，因为媒体文件是一直有的，当你制作完成后就本地存储了，再次添加音频首先用的是本地的。</p><p>我们可以添加一个音频字段，专门放置音频。</p><h2 id="不同端出现媒体文件丢失">不同端出现媒体文件丢失</h2><p>使用 AnkiWeb 进行不同端的同步时，可能会出现媒体文件丢失。</p><p>这是因为 Anki默认只同步牌组，至于说卡牌含有的媒体文件，是不管的。</p><p>我们需要点击工具里面的设置。</p><p>选择同步，勾上<em>同时同步音频和图片</em>。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408232151489.webp" alt="Snipaste_2024-08-23_21-51-53.png"><figcaption aria-hidden="true">Snipaste_2024-08-23_21-51-53.png</figcaption></figure><h2 id="obsidian-中带有卡片的标签与-anki-制出的卡片数量不匹配">Obsidian中带有卡片的标签与 Anki 制出的卡片数量不匹配</h2><p>大概率是因为两个相邻的卡片没有换行。</p><p>使用 vscode 进行修改。</p><h2 id="制卡的时候无法加入-id">制卡的时候无法加入 ID</h2><p>这个大概率是有重复的了，这个插件还挺智能的，重复的卡不加ID，也就是说不会制出相同的 Anki 卡片。</p><h1 id="参考文章">参考文章</h1><p><a href="https://www.vocab.ai/tutorials/awesometts-getting-started">如何使用AwesomeTTS进行音频生成</a></p><p><a href="https://www.vocab.ai/tutorials/anki-configuring-note-types">Anki的卡片配置推荐</a></p><p><a href="https://www.vocab.ai/tutorials/awesometts-batch-generation">AwesomeTTS:Batch Generation (vocab.ai)</a></p><p><a href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-to-anki-plugin/">PKMer_Obsidian插件：用 Obsidian 进行 Anki 制卡</a></p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Anki</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Anki</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 使用Obsidian实现Anki快速制卡 </title>
    <link href="/2024/08/22/%E4%BD%BF%E7%94%A8Obsidian%E5%AE%9E%E7%8E%B0Anki%E5%BF%AB%E9%80%9F%E5%88%B6%E5%8D%A1/"/>
    <url>/2024/08/22/%E4%BD%BF%E7%94%A8Obsidian%E5%AE%9E%E7%8E%B0Anki%E5%BF%AB%E9%80%9F%E5%88%B6%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>我现在使用 Anki 的同时也使用Obsidian，正好可以通过插件来让这两个十分好用的软件实现联动。</p><p>在 Obsidian 中实现 Anki 的快速制卡。</p><h1 id="准备">准备</h1><p>首先要在这两个软件中安装相应的插件。</p><ol type="1"><li>Anki 中安装 <a href="https://ankiweb.net/shared/info/2055492159">AnkiConnect</a></li><li>Obsidian 中安装 <a href="https://github.com/ObsidianToAnki/Obsidian_to_Anki">Export toAnki</a>（我这里放的是 Github 仓库的地址，安装还是要在 Obsidian中安装）</li></ol><p>如何安装这第三方插件请看：</p><ul><li>[[Anki如何安装插件]]</li><li>[[Obsidian如何安装插件]]</li></ul><h1 id="双双启用">双双启用</h1><p>当安装完两个插件并且启用后，打开 anki，注意 anki 是一定要打开的。</p><h2 id="遇到问题">遇到问题</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192217229.webp" alt="Snipaste_2024-08-19_22-09-11.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-09-11.png</figcaption></figure><p>开启后发现出现问题了，没法连接到 Anki。</p><h2 id="查看是什么问题">查看是什么问题</h2><p>这时候不要慌。</p><p>按下<em>Ctrl + Shift + I</em> 可以打开 Obsidian的控制台，能够看到是什么问题。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192218466.webp" alt="Snipaste_2024-08-19_22-11-02.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-11-02.png</figcaption></figure><p>这时候就可以看到问题，即便看不懂也没问题，复制问题到百度上搜索就行。</p><h2 id="解决问题">解决问题</h2><p>这是一个跨域问题，可以通过代码进行更改，但这个问题插件开发者一定是知道的，肯定是有现成的解决方法的。所以我就打开插件商店好好看了看怎么安装的。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192220874.webp" alt="Snipaste_2024-08-19_22-13-13.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-13-13.png</figcaption></figure><p>第六条就告诉我们怎么解决了。</p><p>根据开发者的步骤，再次打开 anki，对 AnkiConnect这个插件进行设置，添加红框中的代码。</p><p>注意改完后要点击确定。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192222245.webp" alt="Snipaste_2024-08-19_22-15-51.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-15-51.png</figcaption></figure><p>返回 Obsidian，再次启用 Export toAnki，可以看到左侧多了个小按钮，说明安装成功！</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192223089.webp" alt="Snipaste_2024-08-19_22-16-34.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-16-34.png</figcaption></figure><h1 id="开始使用">开始使用</h1><h2 id="使用前的一些设置">使用前的一些设置</h2><p>两个插件都启用成功后，我们可以在 Anki中看到插件自动创建的牌组，Default。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192226060.webp" alt="Snipaste_2024-08-19_22-25-35.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-25-35.png</figcaption></figure><p>这个跟我的牌组风格不太一样，我是挺不舒服的，所以改一下设置，这个设置在Obsidian 中进行更改。</p><p>打开 Obsidian 中的设置，左侧往下滑，可以看到 Export to Anki。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192228194.webp" alt="Snipaste_2024-08-19_22-27-18.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-27-18.png</figcaption></figure><p>点击后在右侧可以进行一些设置上的更改，详细的内容请看<a href="https://github.com/ObsidianToAnki/Obsidian_to_Anki/wiki">Home ·ObsidianToAnki/Obsidian_to_Anki Wiki (github.com)</a></p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192234897.webp" alt="Snipaste_2024-08-19_22-32-17.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_22-32-17.png</figcaption></figure><p>在 Note Type Table 中设置每张卡片的具体设置。</p><p>可以添加正则表达式实现更快的制卡。</p><p>规则如下 <a href="https://github.com/ObsidianToAnki/Obsidian_to_Anki/wiki/Regex">Regex· ObsidianToAnki/Obsidian_to_Anki Wiki (github.com)</a>。</p><p><a href="https://github.com/ObsidianToAnki/Obsidian_to_Anki/wiki/Neuracache-flashcard-style">Neuracacheflashcard style · ObsidianToAnki/Obsidian_to_Anki Wiki (github.com)</a>其中这个规则最为简洁。只要使用 <code>#flashcard</code>就能标记一个卡片。</p><p>当然你也可以自我定义。</p><h2 id="快速制卡">快速制卡</h2><p>新建一个笔记，在开头加上 TARGET DECK 和 FILETAGS，然后加上你的卡片的集合名以及卡片的标签。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408221826263.webp" alt="Snipaste_2024-08-22_18-25-48.png"><figcaption aria-hidden="true">Snipaste_2024-08-22_18-25-48.png</figcaption></figure><p>在你想要制卡的位置加上 <code>#lcard</code> ，<code>#lcard</code>同一行的就是正面，下面的就是反面，<em>卡片之间要空行</em>。这个是正则表达式定义的。</p><p>点击左侧的 Anki 图标，就能生成 ID。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408221831230.webp" alt="Snipaste_2024-08-22_18-30-10.png"><figcaption aria-hidden="true">Snipaste_2024-08-22_18-30-10.png</figcaption></figure><p>然后我们就能看到 Anki 中生成的卡片。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408221831482.webp" alt="Snipaste_2024-08-22_18-30-32.png"><figcaption aria-hidden="true">Snipaste_2024-08-22_18-30-32.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408221831877.webp" alt="Snipaste_2024-08-22_18-30-48.png"><figcaption aria-hidden="true">Snipaste_2024-08-22_18-30-48.png</figcaption></figure><p>这个标签和牌组名就是根据你的开头的 TARGET DECK 和 FILE TAGS定义的。</p><h3 id="tags-的一些事项">Tags 的一些事项</h3><p>有时候需要打上多个 tag，这时候我们可以在 Tags 下面写多个tag，注意每个 tag 用空格隔开就行。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409272219932.webp" alt="Snipaste_2024-09-27_22-17-23.png"><figcaption aria-hidden="true">Snipaste_2024-09-27_22-17-23.png</figcaption></figure><p>再点击生成，就会对应文件下生成的卡片就会有设置的两个 tag。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202409272219611.webp" alt="Snipaste_2024-09-27_22-19-50.png"><figcaption aria-hidden="true">Snipaste_2024-09-27_22-19-50.png</figcaption></figure><p>Obsidian 是插件设置的默认 tag，也可以不设置。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Anki</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Anki</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Obsidian如何安装插件 </title>
    <link href="/2024/08/20/Obsidian%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/08/20/Obsidian%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>没有插件的 Obsidian 是不完整的 Obsidian，如果你正在使用Obsidian，一定要会安装插件。</p><p>本文将告诉你如何安装 Obsidian 第三方插件。</p><h1 id="开始安装">开始安装</h1><p>首先进入 Obsidian 界面。</p><p>点击左下角的设置图标，就是那个小齿轮。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192149649.webp" alt="Snipaste_2024-08-19_21-40-36.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-40-36.png</figcaption></figure><p>点击新出现页面中的<em>第三方插件</em>。</p><p>但是因为默认是安全模式，也就是说不允许安装第三方插件，所以首先要关闭安全模式。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192150468.webp" alt="Snipaste_2024-08-19_21-41-15.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-41-15.png</figcaption></figure><p>关闭安全模式后就能够开始安装第三方插件了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192152934.webp" alt="Snipaste_2024-08-19_21-41-29.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-41-29.png</figcaption></figure><p>点击浏览插件市场，<strong>这时候可能会遇到一些网络问题。需要首先解决一下网络问题才能正常使用</strong>。</p><p>解决完网络问题再点击浏览会出现下面的界面。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192153721.webp" alt="Snipaste_2024-08-19_21-47-28.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-47-28.png</figcaption></figure><p>可以搜索你需要的插件，然后点击该插件的卡片。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192154044.webp" alt="Snipaste_2024-08-19_21-47-36.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-47-36.png</figcaption></figure><p>点击安装，就能安装成功。</p><p>接着要返回第三方插件页面，往下滑，能看到已安装插件，其中红框的说明还没有启用，绿框框住的就是已经启用的。</p><p>注意要在这里启用插件，你才能真正的使用这个插件，有时是需要重启Obsidian 的。</p><p>这个页面也能够管理插件，例如删除不需要的插件，或者是更改一些插件的设置。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192156276.webp" alt="Snipaste_2024-08-19_21-55-35.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-55-35.png</figcaption></figure><h1 id="写在最后">写在最后</h1><p>还要注意的是不同的仓库的插件是相互独立的。这点其实很好。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Anki如何安装插件</title>
    <link href="/2024/08/19/Anki%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/08/19/Anki%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>如果需要扩展 Anki 可能就需要安装一些插件。</p><p>这里介绍如何安装插件。</p><h1 id="如何安装-anki-插件">如何安装 Anki 插件</h1><p>当下载完 anki 后打开软件。</p><h2 id="开始安装">开始安装</h2><p>点击上面的工具栏，然后点击插件。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192100750.webp" alt="Snipaste_2024-08-19_20-57-34.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_20-57-34.png</figcaption></figure><p>这时候会跳出新的弹窗，点击左上角的获取插件，然后会出现下面的窗口。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192101831.webp" alt="Snipaste_2024-08-19_20-57-57.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_20-57-57.png</figcaption></figure><p>输入你需要安装的插件的代码，然后点击确定，就可以安装成功。</p><h2 id="如何获取插件代码">如何获取插件代码</h2><p>代码需要在 anki 的插件网页获取：<a href="https://ankiweb.net/shared/addons">Add-ons - AnkiWeb</a>。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192103233.webp" alt="Snipaste_2024-08-19_21-03-10.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-03-10.png</figcaption></figure><h2 id="安装成功">安装成功</h2><p>比如说我需要下载这个 ankiConnect插件，我就找到这个插件，打开页面，然后找到代码2055492159。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192105746.webp" alt="Snipaste_2024-08-19_21-04-12.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-04-12.png</figcaption></figure><p>接着输入到安装插件那个窗口里面，点击确定就行。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192106072.webp" alt="Snipaste_2024-08-19_21-05-08.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-05-08.png</figcaption></figure><p>安装成功！</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408192107722.webp" alt="Snipaste_2024-08-19_21-05-22.png"><figcaption aria-hidden="true">Snipaste_2024-08-19_21-05-22.png</figcaption></figure><p>重启 Anki 即可生效。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Anki</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Anki</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 如何使用光盘存储文件 </title>
    <link href="/2024/08/17/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%85%89%E7%9B%98%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/"/>
    <url>/2024/08/17/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%85%89%E7%9B%98%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>当我因为磁盘的损坏而失去了许多重要的记录后，我开始时不时在互联网上寻找一种比较安全的存储方法，同时这个方法要足够的廉价，简单来说就是一种安全的同时性价比高的存储方式。</p><p>我于是找到了一种可以说是上古的存储方法，用光盘存储，因为我得知到光盘的可靠性，相比起机械硬盘还要高，储存得当的话，二十年都没问题，而且可以完全的一直不通电。</p><p>所以我打算使用光盘来存储一些重要的文件。</p><h1 id="一些需要知晓的事情">一些需要知晓的事情</h1><h2 id="需求">需求</h2><p>这是最重要的部分，做一些事情的时候首先考虑需求，有些工具与方法是无法满足你的具体需求的，那就没必要考虑了。</p><p>我需要存储一些回忆，比如一些图片资源，一些日记，一些我之前写的文章，很少的视频资源。</p><p>我需要进行存储的重要资料没多大的内容，可能半年也不过四五个 G，所以我决定使用光盘。</p><h2 id="使用何种光盘">使用何种光盘</h2><p>首先要考虑的事是使用哪种光盘进行存储。</p><h3 id="dvd-与-cd">DVD 与 CD</h3><p>我选择使用 DVD 盘进行存储，因为相比于 CD 盘，它的储量要大不少。</p><p>普通的 DVD 盘，能够存储 4.7 GB，在电脑上能够真实存储 4.37 GB的内容，而 CD 盘只能够存储 700 MB，存点歌还行，文件的话就算了。</p><h3 id="dvd-的分类">DVD 的分类</h3><p>DVD 也分为许多种，主要的有三种，有蓝光的盘，一个盘能存储 25 GB内容，但是刻录机相比起普通的刻录机要贵了不少，这里就不考虑了。</p><p>所以接下来说的都是普通的 DVD 光盘。</p><p>主要是 DVD-R，DVD+R，DVD-WR。</p><h4 id="dvd-r">DVD-R</h4><p>就是最初的DVD，只能写一次，不能连续的去写，就是说你只能刻录一次。不管这一次你能否存满这个光盘它也就是这样了。不过我自己没用过这个，这些信息是我在网上找的。</p><h4 id="dvdr">DVD+R</h4><p>我用的是这一种。跟 DVD-R基本一样。唯一的区别就是如果光盘没有存满，可以继续存，直到存满。</p><p>我在网上搜集的资料是说这样多次的存储容易弄坏光盘。但我目前刻录了四张盘，没有出现这种情况。</p><p>这个真的挺好用的，<em>因为可以完全利用一张盘的所有空间</em>，跟 DVD-R的价格是一样的。所以我推荐使用这个，性价比是最高的。</p><p>大概是十五六块十张。</p><p>我买的也是联想的光盘。因为比较便宜。</p><h4 id="dvd-rw">DVD-RW</h4><p>可以擦除更改，但是有上限，好像修改个五十多次就坏了。</p><p>而且价格是 DVD-R 和 DVD+R 的两倍多。</p><p>我不需要进行擦除更改，所以就不打算使用这个。</p><h2 id="使用什么刻录机">使用什么刻录机</h2><p>既然要往光盘里面存储文件，那么就需要刻录机，在网上买一个外置的就行，主要要看好能否进行刻录，刻录的盘的种类有哪些。</p><p>一般的一百多就能拿下（这种一两百的没办法刻录蓝光盘，这点要注意，能刻蓝光的，基本在五百多往上了）。</p><p>我这里用的是联想 TX 802，京东就有卖的。一百多就能够买到。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182045539.webp" alt="IMG_20240817_203505.jpg"><figcaption aria-hidden="true">IMG_20240817_203505.jpg</figcaption></figure><h1 id="如何进行刻录">如何进行刻录</h1><p>首先将刻录机与电脑进行连接。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182047103.webp" alt="IMG_20240817_203914.jpg"><figcaption aria-hidden="true">IMG_20240817_203914.jpg</figcaption></figure><p>连接后，按一下刻录机的红色按钮，就能打开刻录机。注意，如果没有连接电脑是无法打开刻录机的，毕竟没有通电。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182048417.webp" alt="IMG_20240817_203925.jpg"><figcaption aria-hidden="true">IMG_20240817_203925.jpg</figcaption></figure><p>然后插入光盘。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182048012.webp" alt="IMG_20240817_203941.jpg"><figcaption aria-hidden="true">IMG_20240817_203941.jpg</figcaption></figure><p>合上之后稍作等待就能够在电脑上看到光盘信息。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182049163.webp" alt="Snipaste_2024-08-17_20-40-10.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-40-10.png</figcaption></figure><p>双击这个驱动器，会弹出一个弹窗，如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182052235.webp" alt="Snipaste_2024-08-17_20-41-07.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-41-07.png</figcaption></figure><p>首先是标题，用你想要的名字命名就行，使用中文也是没有问题的。命名用于之后插入光盘方便看是什么东西。</p><p>然后是选择是类似 U 盘，还是 CD/DVD 播放机。</p><p>第一个用于DVD-RW，也就是能够读写的那种光盘，因为选择这个就是相当于使用 U盘，能够删除，重写之类的。但这里我用的是非 RW 类型的光盘。</p><p>我试了使用类似于 U盘这种使用方法，注意这时候是可以进行删除的，但是因为是非 RW光盘，即便删除，光盘的存储也不会减少，但是删除后，电脑就不显示这部分的引用了，没有路径了，换句话说，这部分资源就永远丢失了。</p><p>所以如果你不是 RW 光盘，就选择第二个，这里选择第二个。</p><p>用联想这个其实挺简单的，不用任何软件，直接粘贴就行。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182058705.webp" alt="Snipaste_2024-08-17_20-41-41.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-41-41.png</figcaption></figure><p>粘贴完后，就能够看到，有个准备写入光盘中的文件，其中<em>desktop.ini</em>其实是个没用的文件，想删除也没事，但是只要插入，就有这个文件。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182059315.webp" alt="Snipaste_2024-08-17_20-42-31.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-42-31.png</figcaption></figure><p>然后退回到设备与驱动器这个界面。</p><p>右键，选择刻录到光盘。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182100797.webp" alt="Snipaste_2024-08-17_20-42-51.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-42-51.png</figcaption></figure><p>然后就会再次弹出一个弹窗，里面有光盘标题与刻录速度，按照需求填写选择就行。</p><p>注意刻录速度要根据你的刻录机选择。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182101397.webp" alt="Snipaste_2024-08-17_20-43-01.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-43-01.png</figcaption></figure><p>然后耐心等待就行。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182102127.webp" alt="Snipaste_2024-08-17_20-43-09.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-43-09.png</figcaption></figure><p>刻录完后，电脑会自动弹出光盘。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182103238.webp" alt="IMG_20240817_205122.jpg"><figcaption aria-hidden="true">IMG_20240817_205122.jpg</figcaption></figure><p>再合上就能够看到光盘中包含的文件了，同时使用这种方式的光盘是没法进行删除的，也就是说不会出现上面删除后丧失引用的</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202408182104976.webp" alt="Snipaste_2024-08-17_20-54-52.png"><figcaption aria-hidden="true">Snipaste_2024-08-17_20-54-52.png</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>光盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>存储</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> LaTex学习 </title>
    <link href="/2024/07/27/LaTex%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/27/LaTex%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是-latex">什么是 LaTex</h1><p>就是用于排版的工具，文档是纯文本，嵌套着 LaTex 命令。使用 Tex引擎来控制排版过程。我们只需要关注文档的内容。视觉外观由计算机负责。</p><h1 id="为什么用">为什么用</h1><p>因为排版非常方便，插入公式也很方便。并且我们可以更加关注内容，而非排版。</p><h1 id="一文告诉你如何使用-latex">一文告诉你如何使用 LaTex</h1><p>这里用 <a href="https://cn.overleaf.com/">Overleaf</a> 进行 LaTex编写。</p><h2 id="文档类型">文档类型</h2><p><code>\documentclass&#123;article&#125;</code> 声明称为其类的文档类型，该<em>类</em>控制文档的整体外观。不同类型的文件需要不同的类别。写在文章的开头。</p><p>可以在这个网站查询更多类<a href="https://www.ctan.org/topic/class">CTAN: Class</a></p><h3 id="类型的额外配置">类型的额外配置</h3><p>可以添加配置，<code>\documentclass[12pt, letterpaper]&#123;article&#125;</code>，如这样。用于配置文章类的此实例;即，我们希望用于此特定基于类的文档的设置。</p><ul><li><code>12pt</code>设置字体大小</li><li><code>letterpaper</code>设置纸张大小</li></ul><h3 id="外加载包">外加载包</h3><p><code>\usepackage&#123;graphicx&#125;</code> 这个是外加载包，用以拓展 LaTex的功能。</p><p>使用下面的网站来查找包。</p><p><a href="https://www.ctan.org/">CTAN: Comprehensive TeX ArchiveNetwork</a></p><h2 id="正文部分">正文部分</h2><p><code>\begin&#123;document&#125;文章就写在这里面\end&#123;document&#125;</code></p><p><code>\begin&#123;document&#125;</code>在这个标签前面写的就是所谓的正文前，也就是我们配置文章的地方。</p><p>相当于 vue 的根节点，只能有一个，内容也都写在这里面。</p><h2 id="标题作者与日期">标题作者与日期</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\title</span>&#123;我的第一篇 LaTex 文档&#125;<br><span class="hljs-keyword">\author</span>&#123;无敌骄阳<span class="hljs-keyword">\thanks</span>&#123;谢谢我的团队，没有他们我走不到这一步&#125;&#125;<br><span class="hljs-keyword">\date</span>&#123;2024 年 7 月&#125;<br></code></pre></td></tr></table></figure><p>这是在正文前面要加的。</p><p>在正文里面要加上这个命令：<code>\maketitle</code>才能显示标题之类的东西，不添加是无法显示的。</p><h2 id="添加注释">添加注释</h2><p><code>%</code> 使用该符号添加注释。编译后不会显示在文章中。</p><h2 id="粗体斜体和下划线">粗体、斜体和下划线</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">那是一个\textbf</span><span class="hljs-template-variable">&#123;不安&#125;</span><span class="language-xml">的\textit</span><span class="hljs-template-variable">&#123;充斥着恐惧的&#125;</span><span class="language-xml">\underline</span><span class="hljs-template-variable">&#123;中元节&#125;</span><span class="language-xml">,那简直就是我的\textit</span><span class="hljs-template-variable">&#123;nightmare&#125;</span><span class="language-xml">。</span><br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271738512.webp" alt="Snipaste_2024-07-27_17-37-56.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-37-56.png</figcaption></figure><p>可以看到中文的斜体不是很明显。</p><h2 id="强调">强调</h2><p><code>\emph&#123;&#125;</code>，需要注意的是在普通文本中，强调的文本是斜体的，但如果在斜体文本中使用文本是正的。</p><p>与众不同就是强调。</p><h2 id="插入图像">插入图像</h2><p>需要使用<code>\usepackage&#123;graphicx&#125;</code></p><p>可以提前配置一下图片的位置<code>\graphicspath&#123;&#123;images/&#125;&#125;</code></p><p>创建个目录，名字跟 path 中的参数一样，然后把图片塞进去。</p><p>使用 <code>\includegraphics[图片的一些属性]&#123;图片名&#125;</code>就可以插入图片了</p><p>一般这样写：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;figure&#125;[h]<br>    <span class="hljs-keyword">\centering</span><br>    <span class="hljs-keyword">\includegraphics</span>[width=0.75<span class="hljs-keyword">\textwidth</span>]&#123;名字&#125;<br>    <span class="hljs-keyword">\caption</span>&#123;A nice plot.&#125;<br>    <span class="hljs-keyword">\label</span>&#123;fig:mesh1&#125;<br><span class="hljs-keyword">\end</span>&#123;figure&#125;  <br></code></pre></td></tr></table></figure><p>解释：</p><ul><li><p><strong><code>\includegraphics[width=0.75\textwidth]&#123;mesh&#125;</code></strong>：这种形式指示 LATEX 将图形的宽度设置为文本宽度的75%，其值存储在命令中。<code>\includegraphics\textwidth</code></p></li><li><p><strong><code>\caption&#123;A nice plot.&#125;</code></strong>：顾名思义，此命令设置了可以放置在图形上方或下方的图形标题。如果创建图表列表，则将在该列表中使用此标题。</p></li><li><p><strong><code>\label&#123;fig：mesh1&#125;</code></strong>：要在文档中引用此图像，请使用命令为其添加标签。标签用于为图像生成一个数字，并与下一个命令结合使用，将允许您引用它。<code>\label</code></p></li><li><p><strong><code>\ref&#123;fig：mesh1&#125;</code></strong>：此代码将被替换为与引用图形对应的数字。</p></li></ul><p>效果如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271759635.webp" alt="Snipaste_2024-07-27_17-59-32.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-59-32.png</figcaption></figure><p>详细的图片介绍看这个 <a href="https://cn.overleaf.com/learn/latex/Inserting_Images">InsertingImages - Overleaf, 在线LaTeX编辑器</a></p><h2 id="有序列表">有序列表</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;itemize&#125;<br>  <span class="hljs-keyword">\item</span> The individual entries are indicated with a black dot, a so-called bullet.<br>  <span class="hljs-keyword">\item</span> The text in the entries may be of any length.<br><span class="hljs-keyword">\end</span>&#123;itemize&#125;<br></code></pre></td></tr></table></figure><h2 id="无序列表">无序列表</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;enumerate&#125;<br>  <span class="hljs-keyword">\item</span> This is the first entry in our list.<br>  <span class="hljs-keyword">\item</span> The list numbers increase with each entry we add.<br><span class="hljs-keyword">\end</span>&#123;enumerate&#125;<br></code></pre></td></tr></table></figure><h2 id="插入数学公式">插入数学公式</h2><h3 id="内联式">内联式</h3><p>三种方法</p><ol type="1"><li><code>\begin&#123;math&#125;数学公式\end&#123;math&#125;</code></li><li><code>$数学公式$</code></li><li><code>\(数学公式\)</code></li></ol><h3 id="显示数学模式">显示数学模式</h3><p><strong>自带编号。</strong></p><p><code>\begin&#123;equation&#125;数学公式\end&#123;equation&#125;</code></p><p>因为自带编号而且是自动排序的，所以不用管编号的事情了。</p><h2 id="基本文档结构">基本文档结构</h2><h3 id="摘要">摘要</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;abstract&#125;<br>这是一个摘要<br><span class="hljs-keyword">\end</span>&#123;abstract&#125;<br></code></pre></td></tr></table></figure><h3 id="段落与换行">段落与换行</h3><p>有两种方法实现换行。</p><ol type="1"><li>跟 md一样，会自动吃掉一个换行符，所以得换两行，才能换行。这种方法的换行是有缩进的。</li><li><code>\\</code>，这种方法是没有缩进的。</li></ol><p>推荐的方法是按下两次 enter 来换行。</p><h3 id="分章节">分章节</h3><p><code>\documentclass&#123;book&#125;</code></p><p><code>\documentclass&#123;cumcmthesis&#125;</code></p><h2 id="建立表">建立表</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;center&#125;<br><span class="hljs-keyword">\begin</span>&#123;tabular&#125;&#123;c c c&#125;<br> cell1 <span class="hljs-built_in">&amp;</span> cell2 <span class="hljs-built_in">&amp;</span> cell3 <span class="hljs-keyword">\\</span> <br> cell4 <span class="hljs-built_in">&amp;</span> cell5 <span class="hljs-built_in">&amp;</span> cell6 <span class="hljs-keyword">\\</span>  <br> cell7 <span class="hljs-built_in">&amp;</span> cell8 <span class="hljs-built_in">&amp;</span> cell9    <br><span class="hljs-keyword">\end</span>&#123;tabular&#125;<br><span class="hljs-keyword">\end</span>&#123;center&#125;<br></code></pre></td></tr></table></figure><p>效果如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271840674.webp" alt="Snipaste_2024-07-27_18-40-03.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_18-40-03.png</figcaption></figure><h3 id="设置边框">设置边框</h3><ul><li>要在行的上方和下方添加水平规则，请使用命令<code>\hline</code></li><li>要在列之间添加垂直规则，请使用垂直线参数<code>|</code></li></ul><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;center&#125;<br><span class="hljs-keyword">\begin</span>&#123;tabular&#125;&#123;|c|c|c|&#125; <br> <span class="hljs-keyword">\hline</span><br> cell1 <span class="hljs-built_in">&amp;</span> cell2 <span class="hljs-built_in">&amp;</span> cell3 <span class="hljs-keyword">\\</span> <br> cell4 <span class="hljs-built_in">&amp;</span> cell5 <span class="hljs-built_in">&amp;</span> cell6 <span class="hljs-keyword">\\</span> <br> cell7 <span class="hljs-built_in">&amp;</span> cell8 <span class="hljs-built_in">&amp;</span> cell9 <span class="hljs-keyword">\\</span> <br> <span class="hljs-keyword">\hline</span><br><span class="hljs-keyword">\end</span>&#123;tabular&#125;<br><span class="hljs-keyword">\end</span>&#123;center&#125;<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271842351.webp" alt="Snipaste_2024-07-27_18-42-20.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_18-42-20.png</figcaption></figure><p>在{tabular}后面的{}添加竖线，在每行后面加上 <code>\hline</code>来添加横线</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271842166.webp" alt="Snipaste_2024-07-27_18-42-11.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_18-42-11.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271843192.webp" alt="Snipaste_2024-07-27_18-42-14.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_18-42-14.png</figcaption></figure><p>latex 创建表格非常耗时，使用在线工具进行创建<a href="https://www.tablesgenerator.com/">Create LaTeX tables online –TablesGenerator.com</a></p><p><em>跟图形一样也有标题、标签和引用。</em></p><h3 id="添加目录">添加目录</h3><p>非常简单，在上面添加 <code>\tableofcontents</code> 自动生成。</p><h1 id="可能遇到的问题">可能遇到的问题</h1><h2 id="自动编译">自动编译</h2><p>记得设置一下自动编译，不然每改一下就得点击一下重新编译。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271709228.webp" alt="Snipaste_2024-07-27_17-09-12.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-09-12.png</figcaption></figure><h2 id="中文报错">中文报错</h2><p>中文会编译后会报错是因为编码问题。</p><p>点击菜单，更换 compiler。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271710737.webp" alt="Snipaste_2024-07-27_17-08-46.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-08-46.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271710796.webp" alt="Snipaste_2024-07-27_17-07-57.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-07-57.png</figcaption></figure><p>换成 XeLaTex</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407271711210.webp" alt="Snipaste_2024-07-27_17-10-58.png"><figcaption aria-hidden="true">Snipaste_2024-07-27_17-10-58.png</figcaption></figure><h2 id="中文无法显示">中文无法显示</h2><p>这时候再编译会不显示中文。</p><p>在 <code>\documentclass&#123;article&#125;</code> 下面添加<code>\usepackage[UTF8]&#123;ctex&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>语言</category>
      
      <category>LaTex</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>LaTex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 磁盘占用问题的一些解决方法 </title>
    <link href="/2024/07/26/%E7%A3%81%E7%9B%98%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/26/%E7%A3%81%E7%9B%98%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>有时候磁盘占用可能过多，对于 windows系统而言有些东西可以关闭，来减少磁盘的占用。</p><h1 id="sysmain">SysMain</h1><p>SysMain会预加载常用的应用程序，来提高程序启动速度，但当你安装的程序多了，就不是那么好用了，可以禁用服务。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407220050345.webp" alt="Snipaste_2024-07-22_00-49-54.png"><figcaption aria-hidden="true">Snipaste_2024-07-22_00-49-54.png</figcaption></figure><h1 id="wsearch">WSearch</h1><p>这个是 windows自己的搜索系统，想必大家都用过，速度感人，非常的慢，可以用<strong>everything</strong> 代替，everything 速度非常快。</p><p>有了 everything 这个自然可以关掉了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407220052599.webp" alt="Snipaste_2024-07-22_00-52-37.png"><figcaption aria-hidden="true">Snipaste_2024-07-22_00-52-37.png</figcaption></figure><h1 id="diagtrack">DiagTrack</h1><p>这个是微软用来检测用户问题的服务，就是你有问题会发给微软，但实际上根本不可能给你处理，所以关了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407220054617.webp" alt="Snipaste_2024-07-22_00-54-35.png"><figcaption aria-hidden="true">Snipaste_2024-07-22_00-54-35.png</figcaption></figure><h1 id="浏览器关闭后继续运行后台扩展与应用">浏览器关闭后继续运行后台扩展与应用</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407220059047.webp" alt="Snipaste_2024-07-22_00-58-49.png"><figcaption aria-hidden="true">Snipaste_2024-07-22_00-58-49.png</figcaption></figure><h1 id="浏览器预加载模式">浏览器预加载模式</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407220059489.webp" alt="Snipaste_2024-07-22_00-58-18.png"><figcaption aria-hidden="true">Snipaste_2024-07-22_00-58-18.png</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>选择性关闭。如果磁盘占用太高，也有可能是磁盘坏了。用<em>DiskInfo</em> 看看磁盘有没有问题。</p><p>对于 NVME 而言，主要看 03 和 0E，03 最好是 100，0E 最好是0。不是的话就说明出问题了。</p>]]></content>
    
    
    <categories>
      
      <category>解决问题</category>
      
      <category>磁盘问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决问题</tag>
      
      <tag>磁盘问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anki学习</title>
    <link href="/2024/07/25/Anki%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/25/Anki%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>anki我是一直想学习的，但我重度拖延症，从初认识到现在真正下定决心要学习已经整整过去了三年时间。</p><p>今天不再等待，直接使用来学习。</p><p><a href="https://docs.ankiweb.net/getting-started.html">anki官方文档</a></p><h1 id="主要界面的几个功能">主要界面的几个功能</h1><ul><li>牌组</li><li>添加</li><li>浏览</li><li>统计</li><li>同步</li></ul><p>有这五个功能，接下来我一个简单的介绍一下，之所以简单介绍，是因为我也是初学者。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232328342.webp" alt="Snipaste_2024-07-23_23-01-15.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-01-15.png</figcaption></figure><h2 id="牌组">牌组</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232341311.webp" alt="Snipaste_2024-07-23_23-41-17.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-41-17.png</figcaption></figure><p>其实就是你的主页面，显示你的所有牌组，你可以从网上获取牌组，然后导入。</p><p>也可以自己创建。</p><p>点击已经有的牌组就可以学习了。</p><p>牌组之间可以嵌套，在命名中可以前后添加 <code>::</code>前面的是父级，后面的是子级。</p><p>嵌套也可以通过拖拽来进行。</p><h2 id="添加">添加</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232344224.webp" alt="Snipaste_2024-07-23_23-44-00.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-44-00.png</figcaption></figure><p>可以添加卡牌，有用的就是模板，牌组，字段，卡片。</p><p>模板不必多言。</p><p>牌组是你创建的卡片要放到哪一个牌组里面去。</p><p>字段是卡片的构成元素。</p><p>卡片能够预览卡片的样式。同时也可以更改卡片长什么样。使用 css。</p><h2 id="浏览">浏览</h2><p>显示你创建的各种卡片。</p><h2 id="统计">统计</h2><p>就是一些你的数据。</p><h2 id="同步">同步</h2><h3 id="注册账号">注册账号</h3><p>第一次点击同步的时候需要创建一个账号，按照要求进行创建，验证邮箱即可。</p><h3 id="同步的三种情况">同步的三种情况</h3><p>同步会出现三种情况，只有冲突情况需要注意，其他的不用管。</p><h4 id="正常情况">正常情况</h4><p>字体为黑色。</p><h4 id="冲突情况">冲突情况</h4><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407240006125.webp" alt="Snipaste_2024-07-23_23-01-15.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-01-15.png</figcaption></figure><p>红色，需要解决冲突。上传时选择本地还是云端。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407240009202.webp" alt="Snipaste_2024-07-23_23-47-27.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-47-27.png</figcaption></figure><p>手机 app 名字为 <strong>ankidroid</strong>，是让你选择使用<strong>ankidroid</strong> 的数据还是 <em>ankiweb</em> #### 新增情况</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407240009463.webp" alt="Snipaste_2024-07-23_23-55-43.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-55-43.png</figcaption></figure><p>蓝色，直接上传就行。</p><h1 id="五种基本卡片">五种基本卡片</h1><p>这个是 anki官方给的五种最基本的卡片，可以稍微学习一下，既可以直接使用，也可以知道如何制卡片。</p><p>这里我以宋词的第一首为例。</p><blockquote><p>燕山亭·北行见杏花 宋 赵佶裁剪冰绡，轻叠数重，淡著燕脂匀注。新样靓妆，艳溢香融，羞杀蕊珠宫女。易得凋零，更多少、无情风雨。愁苦。闲院落凄凉，几番春暮。凭寄离恨重重，这双燕，何曾会人言语。天遥地远，万水千山，知他故宫何处。怎不思量，除梦里、有时曾去。无据，和梦也新来不做。</p></blockquote><p>制作卡片的依据是记忆，这里有篇文章可以看看 <a href="https://super-memory.com/articles/20rules.htm">20 rules offormulating knowledge in learning (super-memory.com)</a></p><h2 id="问答题">问答题</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241202283.webp" alt="Snipaste_2024-07-24_12-02-13.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-02-13.png</figcaption></figure><p>最简单的，正面填问题，背面填答案。</p><p>看到正面的问题，你要想一想，然后显示答案，根据你自我感知，或者列个时间选熟练程度。</p><p>基本上都适合吧。</p><p>效果就是下面的这样。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241202702.webp" alt="Snipaste_2024-07-24_12-01-29.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-01-29.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241202413.webp" alt="Snipaste_2024-07-24_12-01-39.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-01-39.png</figcaption></figure><h2 id="问答题翻转">问答题翻转</h2><p>一次生成两张卡片。就是填一次，生成两张，第一张跟<em>问答题模板</em>一样，第二张是第一张的问题和回答交换位置，问题变成回答，回答变成问题。</p><p>适用于问题与回答同等重要的。</p><p>适合语言学习。</p><h2 id="问答题翻转可选">问答题翻转可选</h2><p>第三个字段可以选择是否生成两张，随便填个东西，填了就是问答题翻转，没填任何东西就是问答题。</p><h2 id="问答题输入答案">问答题输入答案</h2><p>正面是问题，背面是你要填的空。这里我就填的太多了。这个模板最好就是简单的回答，适合用这个。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232357693.webp" alt="Snipaste_2024-07-23_23-55-23.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-55-23.png</figcaption></figure><p>这是你要填的框</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232359688.webp" alt="Snipaste_2024-07-23_23-58-48.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-58-48.png</figcaption></figure><p>填完之后会告诉你错的，注意是完全匹配，错一点都不行。</p><p>并且怎么样还是得你手填。凭你感觉你记得怎么样。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232356757.webp" alt="Snipaste_2024-07-23_23-56-34.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_23-56-34.png</figcaption></figure><h2 id="填空题">填空题</h2><p>挖空，在右上角有个独特的两个图标，进行挖空。</p><p>有两种情况：</p><ol type="1"><li>填空新增卡片</li><li>填空相同卡片</li></ol><p>不过这俩应该是混合着用比较好。</p><h3 id="新增卡片">新增卡片</h3><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241224105.webp" alt="Snipaste_2024-07-24_12-22-19.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-22-19.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241240696.webp" alt="Snipaste_2024-07-24_12-24-51.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-24-51.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241240789.webp" alt="Snipaste_2024-07-24_12-24-55.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-24-55.png</figcaption></figure><p>可以看到是 c 1，c 2，c 3，c4，根据每个空去生成一张卡，当然这样描述不准确，是根据 <code>::</code>前面的字母来生成。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241236318.webp" alt="Snipaste_2024-07-24_12-35-52.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-35-52.png</figcaption></figure><p>背面额外用于写补充的信息。在你点击显示答案或者空格后补充给你一些东西。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241236332.webp" alt="Snipaste_2024-07-24_12-36-08.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-36-08.png</figcaption></figure><p>不过注意，只能识别出来 c 开头的。</p><p>这个就是一个材料切割成多张卡片的时候使用的。</p><h3 id="相同卡片">相同卡片</h3><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241238817.webp" alt="Snipaste_2024-07-24_12-21-36.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-21-36.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241239550.webp" alt="Snipaste_2024-07-24_12-24-44.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-24-44.png</figcaption></figure><p>挖多个空在一张卡上面。</p><h1 id="其他知识">其他知识</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241242965.webp" alt="Snipaste_2024-07-24_12-42-35.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-42-35.png</figcaption></figure><p>这里介绍有用的部分。</p><h2 id="文件">文件</h2><p>可以导入，导出，备份。</p><p>导入可以批量制卡。</p><p>也可以创建，切换账号。账号之间的信息是相互独立的。每个<em>账号</em>对应的<em>ankiweb</em> 是不一样的。</p><h2 id="工具">工具</h2><p>左上角的工具也很有用。</p><p><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241243854.webp" alt="Snipaste_2024-07-24_12-43-03.png"> ### 检查媒体</p><p>检查媒体可以看到之前制卡遗留的媒体文件，可以删除未使用的，减少空间。还有其他的操作。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407241244071.webp" alt="Snipaste_2024-07-24_12-43-40.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_12-43-40.png</figcaption></figure><h3 id="清空卡片">清空卡片</h3><p>能清空都是空白的卡片。批量生成后可以点一点。</p><h1 id="笔者的话">笔者的话</h1><p>重要的是实践下去，并且成为一种习惯，不加思虑便可以去做的事。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Anki</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Anki</tag>
      
      <tag>记忆力</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> no main mainifest attribute的解决方法 </title>
    <link href="/2024/07/25/no%20main%20mainifest%20attribute%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/25/no%20main%20mainifest%20attribute%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="发现问题">发现问题</h1><p>当使用 <code>java -jar</code> 来使用 java 运行时环境启动 jar文件时，可能会遇到下面的情况：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251908868.webp" alt="Snipaste_2024-07-25_15-16-41.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_15-16-41.png</figcaption></figure><p>我们可以把 jar 包给解压来看看。</p><p>是 META-INF 文件夹下面的 MANIFEST. MF 文件。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251911139.webp" alt="Snipaste_2024-07-25_19-09-40.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_19-09-40.png</figcaption></figure><p>用记事本打开：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251911470.webp" alt="Snipaste_2024-07-25_19-09-50.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_19-09-50.png</figcaption></figure><p>明显缺少了 。</p><p>正常的应该是下面这样的：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251913970.webp" alt="Snipaste_2024-07-25_19-10-04.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_19-10-04.png</figcaption></figure><h1 id="解决问题的方法">解决问题的方法</h1><p>打开 pom. xml 文件，翻到最下面的插件部分。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251916846.webp" alt="Snipaste_2024-07-25_19-16-17.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_19-16-17.png</figcaption></figure><p>这里的 skip 的值是true，表明构建过程中实际上跳过了插件的执行，因此不会将主类信息添加到 JAR文件的 MANIFEST. MF 文件中。</p><p>改为 false。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251917981.webp" alt="Snipaste_2024-07-25_15-16-19.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_15-16-19.png</figcaption></figure><p>再打包就可以了。</p><h1 id="笔者的话">笔者的话</h1><p>何须赘言。</p>]]></content>
    
    
    <categories>
      
      <category>解决问题</category>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决问题</tag>
      
      <tag>未发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 阿里云服务器 </title>
    <link href="/2024/07/25/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/07/25/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="购买">购买</h1><p>按照需求购买就行。学生有免费试用一个月的活动，可以试着玩玩。</p><h1 id="开始初始设置">开始初始设置</h1><h2 id="登录云服务器">登录云服务器</h2><p>购买完后，点击实例，点击实例名字。进入界面。</p><p>在基本信息一栏中有远程连接和重置密码。</p><p>先重置密码，再远程连接。</p><p>点击立即登录。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251713434.webp" alt="Snipaste_2024-07-25_17-13-10.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_17-13-10.png</figcaption></figure><p>进入操作界面。</p><h2 id="安装-apache-服务">安装 Apache 服务</h2><p>安装 apche 及其拓展包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install httpd httpd-manual mod_ssl mod_perl<br></code></pre></td></tr></table></figure><p>出现 complete 就说明成功了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407250003404.webp" alt="Snipaste_2024-07-24_23-16-49.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_23-16-49.png</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start httpd <br>systemctl enable httpd<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status httpd<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407250004811.webp" alt="Snipaste_2024-07-24_23-20-10.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_23-20-10.png</figcaption></figure><p>active 说明服务已经启动。</p><p>输入公网 ip 验证。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407250003705.webp" alt="Snipaste_2024-07-24_23-19-36.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_23-19-36.png</figcaption></figure><h2 id="安装-mysql">安装 MySQL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm &amp;&amp; yum -y install mysql57-community-release-el7-10.noarch.rpm &amp;&amp; yum install -y mysql-community-server --nogpgcheck<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mysqld.service<br></code></pre></td></tr></table></figure><p>查看初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep &quot;password&quot; /var/log/mysqld.log<br></code></pre></td></tr></table></figure><p>登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -u root -p<br></code></pre></td></tr></table></figure><p>修改默认密码</p><p>先修改密码策略，因为这里要用简单的密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">set global validate_password_policy=0;  #修改密码安全策略为低（只校验密码长度，至少8位）。 <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;12345678&#x27;;<br></code></pre></td></tr></table></figure><p>给远程登录的电脑以权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;12345678&#x27;;<br></code></pre></td></tr></table></figure><h2 id="安装-php">安装 PHP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap<br></code></pre></td></tr></table></figure><p>创建 php 测试页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; /var/www/html/phpinfo.php<br></code></pre></td></tr></table></figure><p>重启 apache 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart httpd<br></code></pre></td></tr></table></figure><p>访问一下 php 页面，测试是否成功</p><p>http://<你的服务器的公网IP>/phpinfo.php</你的服务器的公网IP></p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407250004074.webp" alt="Snipaste_2024-07-24_23-32-03.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_23-32-03.png</figcaption></figure><h2 id="快照">快照</h2><p>要记费，按照小时来计算。</p><p>当然快照是非常有用的，能够快速恢复服务器。</p><p>但我没钱，就不用了。</p><h1 id="第三方-ssh-登录">第三方 SSH 登录</h1><p>先试一下是否能够第三方 SSH 登录。</p><p>如果不能登录，按下面步骤来。</p><p>先用官方的 ssh 登录</p><p>查看登录日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /var/log/secure<br></code></pre></td></tr></table></figure><p>有可能是你密码输入错误了。你可以从登录日志中看出来。</p><p>执行如下命令，查看sshd_config文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>显示很多东西其中有：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">AllowUsers root test<br>DenyUsers test<br>DenyGroups test<br>AllowGroups root<br></code></pre></td></tr></table></figure><p>修改 sshd_config 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>添加或者修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">AllowUsers root <span class="hljs-built_in">test</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">DenyUsers <span class="hljs-built_in">test</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">DenyGroups <span class="hljs-built_in">test</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">AllowGroups root</span><br></code></pre></td></tr></table></figure><p>最后按 ESC，输入 <code>:wq</code> 保存并退出。</p><p>重启服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart sshd.service<br></code></pre></td></tr></table></figure><p>我这里试用 MobaXterm 进行连接。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407251717604.webp" alt="Snipaste_2024-07-25_17-17-05.png"><figcaption aria-hidden="true">Snipaste_2024-07-25_17-17-05.png</figcaption></figure><p>成功连接。</p><h1 id="笔者的话">笔者的话</h1><p>需要注意的是安装 PHP 是开启的 httpd 服务占用的也是 80 端口，如果用到Nginx 需要更改下 httpd默认端口，或者 kill 掉 httpd。</p>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
      <category>阿里云</category>
      
      <category>CentOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> VScode使用Github Copilot插件时出现read ECONNREST问题的解决方法 </title>
    <link href="/2024/07/23/VScode%E4%BD%BF%E7%94%A8Github%20Copilot%E6%8F%92%E4%BB%B6%E6%97%B6%E5%87%BA%E7%8E%B0read%20ECONNREST%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/23/VScode%E4%BD%BF%E7%94%A8Github%20Copilot%E6%8F%92%E4%BB%B6%E6%97%B6%E5%87%BA%E7%8E%B0read%20ECONNREST%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="read-econnrest">read ECONNREST</h1><p>最近使用 Copilot 时一直出现 read ECONNREST问题，这个表示连接被对方重置了，就是说在读取数据时连接被关闭。</p><p>我首先怀疑是不是会员过期了。</p><h1 id="查看是否仍是-copilot-会员">查看是否仍是 Copilot 会员</h1><p>首先进入 github，点击 your copilot</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232116297.webp" alt="Snipaste_2024-07-23_21-16-41.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-16-41.png</figcaption></figure><p>如果你的会员到期了，会出现页面让你买会员。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232118748.webp" alt="Snipaste_2024-07-23_21-16-59.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-16-59.png</figcaption></figure><p>如果仍然是 copilot 会员，就会直接进入配置页面。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232119728.webp" alt="Snipaste_2024-07-23_21-17-23.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-17-23.png</figcaption></figure><p>经过检查发现我还是会员，这就排除掉会员过期这个问题。</p><h1 id="查看控制台输出">查看控制台输出</h1><p>其实这一步应该先做的。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232128824.webp" alt="Snipaste_2024-07-23_21-27-34.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-27-34.png</figcaption></figure><p>看起来是没有问题的，身份验证也成功通过了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232153663.webp" alt="Snipaste_2024-07-23_21-52-45.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-52-45.png</figcaption></figure><p>我们再看 copilot 状态</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232154501.webp" alt="Snipaste_2024-07-23_21-53-06.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-53-06.png</figcaption></figure><p>好像都没什么问题。</p><p>但还是没法使用 copilot。</p><h1 id="网络连接问题">网络连接问题</h1><p>使用 wireshark 进行排查，发现也没有问题。</p><p>同时在 IDEA 使用 copilot 插件也是没有问题的，说明不是网络的锅。</p><p>网络连接导致的问题也排除。</p><h1 id="浏览器设置问题">浏览器设置问题</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232122179.webp" alt="Snipaste_2024-07-23_21-12-23.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-12-23.png</figcaption></figure><p>打开 edge 浏览器，将关闭继续运行后台扩展与应用打开。（google浏览器的这个选项我是关闭着的）</p><p>然后重启一下 edge浏览器。稍等一会，当然这个时间是不固定的，有长有短。</p><p>也可以重启一下电脑。</p><p>再重启 vscode，现在就可以使用 copilot 了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407232145795.webp" alt="Snipaste_2024-07-23_21-13-02.png"><figcaption aria-hidden="true">Snipaste_2024-07-23_21-13-02.png</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>花了比较长的时间找问题，但我还是不知道原因是什么，这个解决方法是出于经验主义的，不一定真的有效。但经过我个人的测试，能使用copilot 的时候，关闭浏览器的后台选项，再重启 vscode，立马不能使用copilot，我测试了几遍都是一样的结果，所以应该是有所关联的。</p><p>网络不好的时候也同样会出现最上面的问题。</p><p>如果还不行就安装一下 <em>win-ca</em> 插件，将 inject 改为append。</p><p>或者试一下测试版的 <a href="https://code.visualstudio.com/insiders/">Visual Studio CodeInsiders</a>。</p><p>或者试一试旁路由。</p>]]></content>
    
    
    <categories>
      
      <category>解决问题</category>
      
      <category>Copilot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决问题</tag>
      
      <tag>VSCode</tag>
      
      <tag>Copilot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Obsidian本地存储图片的一些技巧 </title>
    <link href="/2024/07/22/Obsidian%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/07/22/Obsidian%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<p>使用 Obsidian记录一些事情的时候，可能会大量的插入一些图片在文档中。</p><p>之前用 typora 是可以设置插入图片时自动创建相同名字的子文件夹，而obsidian插入图片后直接就放在根目录下，十分不方便之后的查看与文件的管理。</p><p>在上网一同查阅后，发现有两个方法，第一是利用图床，把图片传到网上，之后就用网络链接来引用就行，还有种就是使用插件进行图片的管理。这里我先介绍第二种方法，第一种之后再进行介绍。</p><p>不得不说 obsidian 的插件是真的多，不愧是小 vsc。</p><h1 id="图片设置文件夹">图片设置文件夹</h1><p>使用<em>Custom AttachmentLocation</em>插件，在插件市场进行搜索，然后安装。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407222343007.webp" alt="obsidian图片存储问题-1.png"><figcaption aria-hidden="true">obsidian图片存储问题-1.png</figcaption></figure><p>安装之后就点击设置，设置如上图，就能够自动创建于 md文件名字相同的子文件夹。并且注意<strong>当你更改 md 文件的名字时，根据md 文件创建的子文件夹的名字也会随之更改</strong>可以说是相当好用了。</p><p><em>但是注意，如果在安卓平台更改 md文件名字的话，这个方法就丧失了，不会再更改了，之后即便在电脑上更改 md名字也没法起效果了。</em></p><h1 id="图片重新命名">图片重新命名</h1><p>重新命名图片后便于进行管理。</p><p>使用<em>paste image rename</em>插件。</p><p><em>paste image rename</em>这个插件的配置如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407222344673.webp" alt="obsidian图片存储问题-2.png"><figcaption aria-hidden="true">obsidian图片存储问题-2.png</figcaption></figure><p>当然这个插件还是有问题的，比如命名时第一个文件没有-0，而第二张照片是-1，不太统一，这挺不舒服的，然后就是当后缀不同时会有重复的名称。</p><p>又尝试了下，把 Always add dublicate number给勾选上就能够解决第一张图片没有-1的问题，至于说不同格式名称相同，这个不是什么大问题，因为主要还是以截图为主，也就是png 格式。</p><p>不过还是有一个大问题就是我今天安装的这两个插件好像都不太适配<em>安卓</em>。obsidian 图片的插入格式为![[]]这不是通用的 md 图片格式，通用的 md图片插入格式是！【】（）,这里就用中文表示了，因为直接用的话会看不见。</p><p>解决方法是在选项中点击<em>文件与链接</em>，把默认的 wiki选项给取消掉。就可以了。</p><h1 id="图片的路径问题">图片的路径问题</h1><p>之前用 obsidian 写的博客，再用别的软件如 typora打开的时候，图片没办法显示就如同这篇 md 文件。这其实是 obsidian设置的问题。依旧是打开设置，选择<strong>文件与链接</strong>，在<strong>内部链接</strong>中选择基于当前相对路径，默认是<em>尽可能短的形式</em>，正是因为这个默认的选择才导致问题的发生。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407222346987.webp" alt="Snipaste_2024-05-12_14-32-12.png"><figcaption aria-hidden="true">Snipaste_2024-05-12_14-32-12.png</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>Obsidian 我认为好用程度胜过了typora，只要你愿意花费时间去尝试插件。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> ComfyUI使用 </title>
    <link href="/2024/07/21/ComfyUI%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/07/21/ComfyUI%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>今天花时间试了试怎么用ComfyUI，今天晚上就来介绍一下，怎么简单使用。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407211101974.webp" alt="ComfyUI_00011_.webp"><figcaption aria-hidden="true">ComfyUI_00011_.webp</figcaption></figure><p>上面是用 comfyUI 生成的视频。</p><h1 id="安装">安装</h1><p>首先进行安装。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212055224.webp" alt="Snipaste_2024-07-21_20-41-47.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_20-41-47.png</figcaption></figure><p>在 github 上搜索 comfyUI，第一个就是，点进去然后点击左侧 Releases的内容。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212056129.webp" alt="Snipaste_2024-07-21_20-42-02.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_20-42-02.png</figcaption></figure><p>选择第一个，下载下来，然后解压。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212056021.webp" alt="Snipaste_2024-07-21_20-42-30.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_20-42-30.png</figcaption></figure><p>OK，这就结束了，你已经安装完了。</p><p>接下来点击. bat 文件，你就可以使用 comfyUI 了。</p><p>有英伟达显卡的点击 run_nvidia_gpu，没有的就用上面 run_cpu。</p><h1 id="找个模型">找个模型</h1><p>在 <a href="https://civitai.com/">Civita</a>上找个模型，注意左上角得显示 checkpoint，下载好后，放入<code>ComfyUI_windows_portable\ComfyUI\models\checkpoints</code>这个路径里面。</p><h1 id="启动">启动</h1><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212103891.webp" alt="Snipaste_2024-07-21_21-02-38.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-02-38.png</figcaption></figure><p>点击 <code>.bat</code>文件后出现控制台，然后就是等待，有时候很快，有时候很慢，我不清楚是什么原因。这次等了有个七分钟，有时候1秒就进了，我没排查出什么问题。可能是我的电脑不太行了。（快写完博客的时候发现了，是我磁盘读写速度太慢了）不过也可以看出comfyUI 如果使用不是特别的吃配置。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212258116.webp" alt="Snipaste_2024-07-21_22-58-35.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_22-58-35.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212108602.webp" alt="Snipaste_2024-07-21_21-07-12.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-07-12.png</figcaption></figure><p>进入浏览器，在 checkpoint加载器中选择你下载的那个（如果没有模型是没法用的），然后点击右上角的queue，等一会就能生成一张图片，我这台渣机也只需要十秒左右的时间。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212118218.webp" alt="Snipaste_2024-07-21_21-18-08.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-18-08.png</figcaption></figure><h1 id="加上插件">加上插件</h1><p>我这里是已经加上汉化插件了，原本的是全英语的，所以我接下来介绍怎么安装插件。</p><h2 id="confyui-manager">ConfyUI-Manager</h2><p>前提是要安装 git，安装过程这里不多赘述。</p><p>我们先来安装插件管理器，方便之后插件的安装。</p><p><code>ComfyUI_windows_portable\ComfyUI\custom_nodes</code>在这个路径，选中路径框。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212121905.webp" alt="Snipaste_2024-07-21_21-20-45.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-20-45.png</figcaption></figure><p>输入 cmd，进入控制台。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212121186.webp" alt="Snipaste_2024-07-21_21-21-29.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-21-29.png</figcaption></figure><p>输入下面的指令:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git clone https://github.com/ltdrdata/ComfyUI-Manager.git<br></code></pre></td></tr></table></figure><p>然后重启 comfyUI，就能够通过管理器来安装插件，不用手动 git clone了。</p><h2 id="使用-manager-安装汉化插件">使用 manager 安装汉化插件</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212125711.webp" alt="Snipaste_2024-07-21_21-24-52.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-24-52.png</figcaption></figure><p>重启后再进入，发现右下角多了 manager，点击进入插件管理。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212126746.webp" alt="Snipaste_2024-07-21_21-26-04.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-26-04.png</figcaption></figure><p>我画了四个红框，这是我觉得会比较常用到的，从上到下，第一个是插件的管理，第二个是模型的管理，第三个第四个是更新comfyUI 本体与插件的。</p><p>点击第一个，搜索 AIGODLIKE，点击 INSTALL，进行汉化。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212129698.webp" alt="Snipaste_2024-07-21_21-28-50.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-28-50.png</figcaption></figure><p>还要重启一下 comfyUI。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212130288.webp" alt="Snipaste_2024-07-21_21-30-07.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-30-07.png</figcaption></figure><p>这里就汉化成功了。</p><p>至于其他的插件，我就不多介绍了。大家可以看看。github 上看看 readme就能大致清楚怎么用了。</p><h1 id="工作流-work-flow">工作流 work flow</h1><p>comfyUI 玩的就是工作流，这里可以看看作者的一些例子 <a href="https://github.com/comfyanonymous/ComfyUI_examples">comfyanonymous/ComfyUI_examples:Examples of ComfyUI workflows (github.com)</a> 作为学习与参考。</p><h1 id="简单的文生图工作流">简单的文生图工作流</h1><h2 id="建立节点">建立节点</h2><p>右键就可以新建节点。</p><p>先整个 checkpoint加载器，这是一切的原点。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212136349.webp" alt="Snipaste_2024-07-21_21-35-44.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-35-44.png</figcaption></figure><p>然后在条件一栏选择 clip 文本编码器，在这里我们可以填写正面或者负面的promot，</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212138624.webp" alt="Snipaste_2024-07-21_21-38-45.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-38-45.png</figcaption></figure><p>点击节点，可以对标题进行修改，同时也能改变颜色，让节点更加清晰。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212140817.webp" alt="Snipaste_2024-07-21_21-39-43.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-39-43.png</figcaption></figure><p>效果如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212142589.webp" alt="Snipaste_2024-07-21_21-42-05.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-42-05.png</figcaption></figure><p>然后加入采样器，在采样里面。选择那个 K 采样器就行。</p><p>接着是空的 latent，用来控制图片的大小。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212144775.webp" alt="Snipaste_2024-07-21_21-41-13.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-41-13.png</figcaption></figure><p>最后是 vae 的解码器和图片下载，vae 解码器也在 latent里面，注意别跟编码器弄混了，图片下载在图片里面。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212146894.webp" alt="Snipaste_2024-07-21_21-46-17.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-46-17.png</figcaption></figure><p>就这几个节点，然后连线。相同颜色的能连到一起。左边的点代表输入，右边的点代表输出，把相对应的连起来，一个简单的文生图工作流就完成了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212150081.webp" alt="Snipaste_2024-07-21_21-49-07.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-49-07.png</figcaption></figure><p>输入提示词。我这里用了自动的负面提示词，这是 one button插件的自定义节点。最后点击<em>添加提示词队列</em>，进行测试。</p><p>稍等片刻，第一次使用一个模型会很慢，之后就非常快了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212156809.webp" alt="Snipaste_2024-07-21_21-55-58.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_21-55-58.png</figcaption></figure><p>这里就得到了一张 ai 生成的图片。</p><h2 id="进行分组">进行分组</h2><p>右键也可以进行分组。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212226656.webp" alt="Snipaste_2024-07-21_22-03-37.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_22-03-37.png</figcaption></figure><p>对着分组再右键，缩放组到节点就是能全部包裹住已经包裹的节点，让节点不那么乱。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212227828.webp" alt="Snipaste_2024-07-21_22-04-00.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_22-04-00.png</figcaption></figure><p>编辑组可以设置颜色与标题，使组更明显，让工作流更加井井有条。</p><h1 id="视频工作流">视频工作流</h1><p>大家可以看看作者给的例子中的 video 部分，注意一定要使用 svd模型，下载是在之前的 manager 中点击 model manager 搜索 svd下载即可。然后在工作流中选择这个。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212251579.webp" alt="Snipaste_2024-07-21_22-51-16.png"><figcaption aria-hidden="true">Snipaste_2024-07-21_22-51-16.png</figcaption></figure><p>使用下面的图片进行视频制作。这张图也是用 comfyUI 简单生成的。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212251305.webp" alt="ComfyUI_00080_.png"><figcaption aria-hidden="true">ComfyUI_00080_.png</figcaption></figure><p>等了一会，视频如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407212313029.webp" alt="ComfyUI_00081_.webp"><figcaption aria-hidden="true">ComfyUI_00081_.webp</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>comfyUI上手十分简单，可以说是解压即用了，至于进阶的内容就是看看大神们的工作流是怎么设计的。自己也比葫芦画瓢尝试尝试。</p>]]></content>
    
    
    <categories>
      
      <category>AI</category>
      
      <category>ComfyUI</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>AI</tag>
      
      <tag>ComfyUI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> FileZilla Cilent进行FTP传输 </title>
    <link href="/2024/07/20/FileZilla%20Cilent%E8%BF%9B%E8%A1%8CFTP%E4%BC%A0%E8%BE%93/"/>
    <url>/2024/07/20/FileZilla%20Cilent%E8%BF%9B%E8%A1%8CFTP%E4%BC%A0%E8%BE%93/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>当设备多的时候文件的传输就成了一种问题。</p><p>就比如说我想将手机上的文件传到电脑里面，因为我使用的电脑跟我的手机不是一个生态的，它们唯一的联系或许就是连接到了统一WIFI 下，也就是说它们在同一个局域网里面。</p><p>这样我们就可以使用 FTP 进行传输。对了 FTP 使用的是 TCP 协议。</p><p>使用 FTP 传输的前提是确保两台设备都能运行 FTP 服务，手机可以安装 ES文件浏览器，或者 KSWEB，都能一键启用。电脑一般是默认启用了。</p><p>其实可以直接用电脑自带的进行连接，但不是特别的方便，所以这里用<em>FileZillaCilent</em> 进行 ftp 的传输。其实主要是介绍怎么用的，而不是 ftp传输。</p><p>很简单。</p><h1 id="使用-filezilla">使用 FileZilla</h1><p>点击安装的 exe 文件，一直下一步就安装成功。</p><p>打开软件。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201924669.webp" alt="Snipaste_2024-07-20_19-23-38.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-23-38.png</figcaption></figure><p>输入你想要进行连接的主机（也就是 <code>ftp://</code>加上局域网中该机器的 IP地址），用户名，密码，以及端口，注意不同的用户对应的权限可能也不一样。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201926659.webp" alt="Snipaste_2024-07-20_19-25-02.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-25-02.png</figcaption></figure><p>如果之前已经进行过连接，就可以点击最右侧的向下的小三角。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201928048.webp" alt="Snipaste_2024-07-20_19-26-39.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-26-39.png</figcaption></figure><p>点击已经进行过连接的标识。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201929662.webp" alt="Snipaste_2024-07-20_19-29-10.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-29-10.png</figcaption></figure><p>这里提醒不安全的 FTP 连接，这是因为我的手机开启的 FTP 服务器不支持FTP over TLS，因为家庭局域网，不用管这个问题，直接点击确定。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201931263.webp" alt="Snipaste_2024-07-20_19-30-55.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-30-55.png</figcaption></figure><p>接下来就可以愉快的进行文件的传输了。</p><p>本地站点表示正在使用的电脑，远程站点表示另一台设备。</p><p>可以进行多选，然后点击下载，这样就将文件从我的手机传到电脑上了。速度挺快的。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201935717.webp" alt="Snipaste_2024-07-20_19-33-56.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-33-56.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201935674.webp" alt="Snipaste_2024-07-20_19-34-03.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-34-03.png</figcaption></figure><p>当然也可以在电脑上对手机上的文件进行快速操作，例如删除，转移之类的。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407201937438.webp" alt="Snipaste_2024-07-20_19-36-49.png"><figcaption aria-hidden="true">Snipaste_2024-07-20_19-36-49.png</figcaption></figure><p>至于说直接双击文件，是将文件从一端传向另一端，真要看的话还得传到本地后，才能看。</p><p>也可以右键点击查看与编辑进行修改文件。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407291621910.webp" alt="Snipaste_2024-07-24_21-55-03.png"><figcaption aria-hidden="true">Snipaste_2024-07-24_21-55-03.png</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>这里只进行了部分介绍，因为我也就用到了这么多东西，这些应该也是够用的了。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>FTP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>FTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 小米ROOT方法 </title>
    <link href="/2024/07/20/%E5%B0%8F%E7%B1%B3ROOT%E6%96%B9%E6%B3%95/"/>
    <url>/2024/07/20/%E5%B0%8F%E7%B1%B3ROOT%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>因为涉及到了需要用到 root 的手机，所以又拿出了我的老手机小米 5来完成我的需求。</p><p>因为小米，为发烧而生，所以它的 ROOT相当简单，虽说我花费了不少的时间。</p><h1 id="解-bl-锁">解 BL 锁</h1><h2 id="手机设置">手机设置</h2><p>首先就是解开 BL 锁。</p><p>在设置 -&gt; 我的设备 -&gt; 全部信息与参数里面，先进入。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191941415.webp" alt="Snipaste_2024-07-19_19-39-58.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-39-58.png</figcaption></figure><p>连续点击 MIUI 版本，进入开发者模式。</p><p>找到开发者选项，这个一般在更多设置里面。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191944402.webp" alt="Snipaste_2024-07-19_19-40-15.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-40-15.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191944705.webp" alt="Snipaste_2024-07-19_19-40-29.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-40-29.png</figcaption></figure><p>打开开发者选项，还有 OEM 解锁。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191945790.webp" alt="Snipaste_2024-07-19_19-40-52.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-40-52.png</figcaption></figure><p>同时还要打开 USB 调试。</p><p>除此外要点击一下设备解锁状态，进入页面，现在显示的是当前设备已经锁定，如果你还没有解开BL 锁的话，点击绑定账号与设备。</p><p>最后，关机。</p><p>等待关机后，声音减号键加上关机键一起按下进入 fastboot 模式。</p><p>到这里，手机的设置就结束了。</p><h2 id="电脑下载">电脑下载</h2><p><a href="https://www.miui.com/unlock/download.html">申请解锁小米手机(miui.com)</a> 进入该网站，下载 miflash_unlock 软件，这是一个 zip压缩包，解压后点击 exe 文件，进入操作页面</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191952838.webp" alt="Snipaste_2024-07-19_19-51-45.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-51-45.png</figcaption></figure><p>之后点击小齿轮，先安装驱动。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191953089.webp" alt="Snipaste_2024-07-19_19-52-13.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_19-52-13.png</figcaption></figure><p>点击这个驱动检测，如果没安装驱动，它会自动帮你安装。</p><p>安装成功也有可能不显示成功，不管就行。</p><p>返回操作界面，使用 usb 连接手机与电脑，点击解锁。</p><p>可能不成功，例如说没账号或者时间不够之类的，没账号可能是因为需要给手机安装sim 卡，时间不够就是要求你绑定账号时间得达到七天。</p><p>如果都没有遇到，等到进度条走到 100，你就解锁成功了。</p><h2 id="解锁成功">解锁成功</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407191955673.webp" alt="Screenshot_2024-07-19-19-33-24-585_com.android.settings.png"><figcaption aria-hidden="true">Screenshot_2024-07-19-19-33-24-585_com.android.settings.png</figcaption></figure><p>现在设备解锁页面的图片就是上图所示这样。</p><h1 id="刷机">刷机</h1><h2 id="下载刷机包">下载刷机包</h2><p>也就是下载小米 rom，进入下面网站进行下载，<a href="https://xiaomirom.com/">XiaomiROM.com - 小米 ROM |MIUI、澎湃OS（HyperOS）线刷包, 卡刷包的最新及历史版本下载</a></p><p>选择你手机的版本，如果不恰当有可能变砖，后果就只能自负了。</p><p>下载的 rom 包也是一个 zip 压缩包，解压，找到 boot.img，这就是所需要的文件。</p><h2 id="使用-magisk-进行修补">使用 magisk 进行修补</h2><p>这一步只是为了完整的安装 magisk，也就是为了让引导分区里面有ramdisk，可以看看<a href="https://topjohnwu.github.io/Magisk/install.html">安装手册</a>，因为有些好玩的内容需要用到magisk 的模块，所以我就一并做了，不然之后还得再重复一次。</p><p>拿到 boot. img 传到手机里面。</p><p>在手机中安装 magisk，先下载 <a href="https://github.com/topjohnwu/Magisk">magisk</a>，点击 releases，在assets 中选择下载 apk 就行。</p><p>把这个文件传到手机里面，进行安装，这里是没有开启 ramdisk 的。</p><p>所以需要进行修补。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407192016323.webp" alt="Snipaste_2024-07-19_20-16-10.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_20-16-10.png</figcaption></figure><p>进入 magisk 应用，选择安装。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407192017565.webp" alt="Snipaste_2024-07-19_20-16-20.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_20-16-20.png</figcaption></figure><p>直接下一步。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407192017409.webp" alt="Snipaste_2024-07-19_20-16-33.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_20-16-33.png</figcaption></figure><p>选择第一个选项，然后选择刚刚传到手机里面的 boot. img文件，开始修补，修补完后会在 download 文件夹中生成一个 magisk_patched文件开头的 img文件，这就是我们要刷进手机里面的文件。把它传到电脑里面。</p><h2 id="开始刷机">开始刷机</h2><p>下载<a href="https://atmb.top/download/">秋之盒</a>，也是一个压缩包，解压即用。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407192021338.webp" alt="Snipaste_2024-07-19_20-21-27.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_20-21-27.png</figcaption></figure><p>进入该页面，然后连接手机，注意手机仍然要进入 fastboot模式，也就是先关机，同时按下减号以及关机键。连接后，就 fastboot刷入，选择刚刚传进电脑里面那个 magisk_patched 开头的 img文件，等待进度条跑满。</p><p>然后就成功了。这里也没有清空手机文件，只是 root 了手机。</p><p>现在就可以开启 root 模式了。</p><h2 id="告成">告成</h2><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407192025615.webp" alt="Snipaste_2024-07-19_20-24-51.png"><figcaption aria-hidden="true">Snipaste_2024-07-19_20-24-51.png</figcaption></figure><p>现在就成为超级用户了，可以使用解除许多限制，玩点好玩的了。</p><h1 id="笔者的话">笔者的话</h1><p>其实是很简单的事情，只不过我还是花费了许多的时间，大部分时间，所浪费的，都是无意识的，那么如何利用好时间，就是如何增加自己的有意识时刻。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>ROOT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>小米手机</tag>
      
      <tag>ROOT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Python与MySQL </title>
    <link href="/2024/07/18/Python%E4%B8%8EMySQL/"/>
    <url>/2024/07/18/Python%E4%B8%8EMySQL/</url>
    
    <content type="html"><![CDATA[<p>我发现不管是做什么，最开始总是会遇到各种各样的问题，而学习的过程就是解决这些问题的过程。</p><p>首先就是anaconda的问题，因为我电脑里面没有安装python环境，就只能用anaconda的虚拟环境来做，但如果你用pycharm来新建个项目，它默认是让你新建一个虚拟环境，而我只想用已经有的环境来做，毕竟环境的新建是在c盘的，我以往一贯的习惯就是不把东西放到c盘。</p><p>所以就在看怎么解决这个问题。</p><p>自己摸索了一会，发现了解决方法：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407182222324.webp" alt="Snipaste_2024-03-27_21-50-51.png"><figcaption aria-hidden="true">Snipaste_2024-03-27_21-50-51.png</figcaption></figure><p>首先进入settings中</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407182222206.webp" alt="Snipaste_2024-03-27_21-51-03.png"><figcaption aria-hidden="true">Snipaste_2024-03-27_21-51-03.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407182222593.webp" alt="Snipaste_2024-03-27_21-51-11.png"><figcaption aria-hidden="true">Snipaste_2024-03-27_21-51-11.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407182223679.webp" alt="Snipaste_2024-03-27_21-51-23.png"><figcaption aria-hidden="true">Snipaste_2024-03-27_21-51-23.png</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407182223474.webp" alt="Snipaste_2024-03-27_21-51-39.png"><figcaption aria-hidden="true">Snipaste_2024-03-27_21-51-39.png</figcaption></figure><p>然后就可以了。</p><h3 id="创建连接">创建连接</h3><p>之后就开始用python操作mysql了，先下载pymysql包，然后在文件中导入改包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pymysql <span class="hljs-keyword">import</span> Connection<br></code></pre></td></tr></table></figure><p>我们要用到这个connection组件</p><p>然后就是创建这个connection：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">con = Connection(<br>    host=<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-comment"># 你的本地地址</span><br>    port=<span class="hljs-number">3306</span>, <span class="hljs-comment"># mysql开启的端口号</span><br>    user=<span class="hljs-string">&quot;root&quot;</span>, <span class="hljs-comment"># 你的mysql的用户名</span><br>    password=<span class="hljs-string">&quot;123&quot;</span> <span class="hljs-comment"># 你的密码   </span><br>    database=<span class="hljs-string">&quot;xxxx&quot;</span> <span class="hljs-comment"># 默认的数据库的名字  这样也行con.select_db(&quot;数据库名字&quot;)，但是会被下方的覆盖掉</span><br>)<br></code></pre></td></tr></table></figure><p>对了如果要更改密码的话，记得是在cmd中输入指令，不是mysql的那个控制台中。</p><p>建立连接后也要关闭连接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">con.close()<br></code></pre></td></tr></table></figure><p>当然咱们也要考虑到异常的状况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pymysql <span class="hljs-keyword">import</span> Connection<br><br>con = <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">try</span>:<br>    con = Connection(<br>        host=<span class="hljs-string">&quot;localhost&quot;</span>,<br>        port=<span class="hljs-number">3306</span>,<br>        user=<span class="hljs-string">&quot;root2&quot;</span>,<br>        password=<span class="hljs-string">&quot;123&quot;</span><br>    )<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(con))<br>    <span class="hljs-built_in">print</span>(con.get_host_info())<br>    <span class="hljs-built_in">print</span>(con.get_server_info())<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;异常&quot;</span>, e)<br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-keyword">if</span> con:<br>        con.close()<br></code></pre></td></tr></table></figure><h3 id="使用数据库执行ddl语句">使用数据库执行ddl语句</h3><p>其实关键的就是游标cursor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cursor = con.cursor()<br></code></pre></td></tr></table></figure><p>这是建立游标，获得你数据库的游标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cursor.execute(<span class="hljs-string">&quot;sql&quot;</span>) <span class="hljs-comment"># sql就是正常的sql语句了</span><br></code></pre></td></tr></table></figure><p>在这就是这行sql语句了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">sql = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        CREATE TABLE `STUDENT` (</span><br><span class="hljs-string">            `Sno` CHAR(9) NOT NULL PRIMARY KEY COMMENT &#x27;主键&#x27;,</span><br><span class="hljs-string">            `Sname` VARCHAR(10) NOT NULL,</span><br><span class="hljs-string">            `Ssex` CHAR(2) NULL DEFAULT &#x27;男&#x27; COMMENT &quot;默认设置为&#x27;男&#x27;&quot;, </span><br><span class="hljs-string">            `Sage` INT NULL,</span><br><span class="hljs-string">            `Sdept` VARCHAR(4) NULL,</span><br><span class="hljs-string">            `Sbirth` DATETIME NULL</span><br><span class="hljs-string">        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>比如这样，用python的多行注释来做</p><p>最后就是关闭游标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cursor.close() <span class="hljs-comment"># 这一步可以省略,因为最后con关闭后,cursor自动关闭</span><br></code></pre></td></tr></table></figure><hr><p>最后总结一下，就是用游标，先建立游标，然后写sql语句，execute执行就行了，最后关闭也是可以省略的。也就是说就两步。</p><h1 id="笔者的话">笔者的话</h1><p>一旦陷入自暴自弃的境地，就像深陷流沙要脱离，越挣扎或许就越陷越深。</p>]]></content>
    
    
    <categories>
      
      <category>语言</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 利用Linux学习MySQL </title>
    <link href="/2024/07/17/%E5%88%A9%E7%94%A8Linux%E5%AD%A6%E4%B9%A0MySQL/"/>
    <url>/2024/07/17/%E5%88%A9%E7%94%A8Linux%E5%AD%A6%E4%B9%A0MySQL/</url>
    
    <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>使用 Linux 进行 MySQL 的学习。</p><p>首先来看两个指令，这两个是用来查 Linux 版本的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">lsb_release -a # 这个非常之详细，有发行版的信息<br>uname -a # 这个就只会显示内核信息<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172010656.webp" alt="Linux与MySQL-1.png"><figcaption aria-hidden="true">Linux与MySQL-1.png</figcaption></figure><p>今天用 ssh登陆的时候突然连接不到香橙派了，最后是用网线才解决问题。</p><p>或许是因为路由器每天重启的原因。</p><h1 id="安装-mysql">安装 MySQL</h1><p>首先，先要更新包列表，每次安装什么新的东西都要操作一次</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><p>然后就直接安装 MySQL 的服务器了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install mysql-server<br></code></pre></td></tr></table></figure><p>可以查一下 MySQL 的版本，看看是 5.7 还是 8.0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql --version<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172010944.webp" alt="Linux与MySQL-2.png"><figcaption aria-hidden="true">Linux与MySQL-2.png</figcaption></figure><p>这里可以看到是 8.0。</p><p>我们也可以看看这个 mysql 是安在哪里了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">which mysql<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172010989.webp" alt="Linux与MySQL-3.png"><figcaption aria-hidden="true">Linux与MySQL-3.png</figcaption></figure><h2 id="apt-get-的作用以及常见命令">apt-get 的作用以及常见命令</h2><p><code>apt-get</code> 是 Debian 和 Ubuntu 等基于 Debian 的 Linux发行版中的一个命令行工具，用于处理包。</p><p>这个工具可以用来安装、升级或删除软件包。</p><p>以下是一些常用的 <code>apt-get</code> 命令：</p><ul><li><code>sudo apt-get update</code>：更新你的包列表。这将获取最新的软件包版本信息，但不会安装或升级任何软件包。</li><li><code>sudo apt-get upgrade</code>：升级所有已安装的软件包到最新版本。</li><li><code>sudo apt-get install &lt;package&gt;</code>：安装一个软件包。你需要将<code>&lt;package&gt;</code> 替换为你想要安装的软件包的名称。</li><li><code>sudo apt-get remove &lt;package&gt;</code>：删除一个软件包。你需要将<code>&lt;package&gt;</code> 替换为你想要删除的软件包的名称。</li><li><code>sudo apt-get autoremove</code>：删除所有不再需要的软件包。这通常用来清理那些被安装为其他软件包的依赖，但现在不再需要的软件包。</li><li><code>sudo apt-get dist-upgrade</code>：升级系统到新的发行版。</li></ul><p>这些命令可以帮助管理 Linux 系统，保持软件包的最新状态。</p><h1 id="使用-mysql">使用 MySQL</h1><p>第一步是创建用户，不过这个 root用户应该一开始就已经有了，这里只是给这个 root用户设置一下初始的密码。（这一步还是在 linux 的 shell 中进行）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -u root -p<br></code></pre></td></tr></table></figure><p>输入这行指令之后，让你输入密码，同样是不显示位数的，什么都没有。</p><p>然后就可以开始使用了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SHOW</span> DATABASES;<br></code></pre></td></tr></table></figure><p>先显示一下所有的数据库，注意是 <code>databases</code> 后面是有个<code>s</code> 的，还有得加个 <code>；</code>。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172011720.webp" alt="Linux与MySQL-4.png"><figcaption aria-hidden="true">Linux与MySQL-4.png</figcaption></figure><p>除了 <code>soleilbase</code> 是我创建的，其他的都是 MySQL自带的，都是有用的。</p><ul><li><code>information_schema</code> 是 MySQL中的一个特殊数据库，它提供了关于 MySQL服务器的元数据，包括数据库的信息、表的信息、列的信息、权限的信息等等。这些信息以表的形式存储，你可以像查询普通的表一样查询这些信息。</li><li><code>mysql</code> 是 MySQL 中的一个系统数据库，它存储了 MySQL服务器的元数据，包括用户账户信息、权限信息、系统配置等等。 以下是<code>mysql</code> 数据库中一些重要的表：<ul><li><code>user</code>：存储了用户账户信息，包括用户名、密码、权限等等。</li><li><code>db</code>：存储了数据库级别的权限信息。</li><li><code>tables_priv</code>：存储了表级别的权限信息。</li><li><code>columns_priv</code>：存储了列级别的权限信息。</li><li><code>procs_priv</code>：存储了存储过程和函数的权限信息。</li><li><code>time_zone*</code>：存储了时区信息。</li></ul></li><li><code>performance_schema</code>数据库是虚拟的，它的数据并不存储在磁盘上，而是在查询时动态生成。因此，你不会在文件系统中找到<code>performance_schema</code> 数据库的数据文件。</li><li><code>sys</code> 是 MySQL中的一个特殊数据库，它提供了一组视图、函数和过程，用于帮助数据库管理员更好地理解和优化MySQL 服务器的性能。<code>sys</code> 数据库中的对象是基于<code>performance_schema</code> 和 <code>information_schema</code>数据库的数据创建的，它们提供了一种更易于理解和使用的方式来访问这些数据例如，<code>sys</code>数据库中的 <code>schema_tables_with_full_table_scans</code>视图可以帮助你找出那些经常进行全表扫描的表，这可能是性能问题的一个指标。</li></ul><p>创建一个数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">CREATE</span> DATABASE sqlTest；<br></code></pre></td></tr></table></figure><p><em>注意，linux 上的 mysql 是区分大小写的，但是 win上面的是不区分的都是小写，但是如果你 linux 上以及区分大小写了，你用 win连接这个 linux 上的数据库，那么 win 上面也就区分大小写了。</em></p><p>使用这个新建的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL">use sqlTest; <span class="hljs-comment">-- 注意大小写了</span><br></code></pre></td></tr></table></figure><p>至于说其他的操作，就请期待我的数据库的内容了。</p><h2 id="更改-mysql-用户验证方式">更改 MySQL 用户验证方式</h2><p>接下来你如果切换为其他用户，不是 root 用户，可能无法登录 MySQL 的root 用户，这是因为 MySQL 默认的 <code>root</code> 用户使用了<code>auth_socket</code> 插件进行身份验证，这意味着只有系统的<code>root</code> 用户才能以 MySQL 的 <code>root</code>用户身份登录。</p><p>先切换为 linux 的 root 用户。</p><p>然后登录 MySQL 的 root 用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su root<br>mysql -u root -p<br></code></pre></td></tr></table></figure><p>登录进去后更改 root 用户的验证方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> mysql_native_password <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;你的密码&#x27;</span>; <span class="hljs-comment">-- By包括后面可以不要，就是不用改密码了，有的话可以更改密码</span><br></code></pre></td></tr></table></figure><p>最后刷新下权限（可有可无）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL">FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><p>恢复的话就更改第二步的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> auth_socket;<br></code></pre></td></tr></table></figure><h2 id="新建-mysql-用户">新建 MySQL 用户</h2><p>第一步还是要用 mysql 的 root 用户登录。</p><p>之后在 MySQL 提示符下，使用 <code>CREATE USER</code>命令创建新用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;username&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><code>'username'</code> 是用户的名称，它可以是任何有效的标识符。在MySQL中，标识符可以包含字母、数字、下划线、美元符号等字符，但不能包含空格、点、破折号等特殊字符。标识符的长度不能超过32 个字符。</li><li><code>'%'</code> 是主机名，它指定了用户可以从哪些主机连接到 MySQL服务器。<code>'%'</code> 表示任何主机，也就是说，用户可以从任何 IP地址连接到 MySQL 服务器。你也可以指定一个具体的 IP 地址或主机名，例如<code>'192.168.1.1'</code> 或 <code>'localhost'</code>。你也可以给个名字<code>Soleil</code> 这就要求连接到 MySQL 服务器的主机名字要叫Soleil。如果主机不符合@后面规定的要求，那就没法连接。</li><li><code>password</code>为你想设置的密码，注意<strong>千万别忘记</strong>。</li></ul><p>最后，你需要给新用户分配权限。你可以使用 <code>GRANT</code>命令来做这个。 这里我们要给我们的新用户赋予全部的权限。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;username&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><code>GRANT</code>：这是一个 SQL 关键字，它用于授予用户权限。</li><li><code>ALL PRIVILEGES</code>：这表示所有的权限。在 MySQL中，权限包括读取数据、写入数据、修改表结构、管理用户等等。<code>ALL PRIVILEGES</code>表示所有这些权限。</li><li><code>ON *.*</code>：这表示所有的数据库和表。在 MySQL中，<code>*.*</code>表示所有的数据库和表。你也可以指定一个具体的数据库或表，例如<code>ON database_name.*</code>表示指定数据库的所有表，<code>ON database_name.table_name</code>表示指定的表。</li><li><code>TO 'username'@'%'</code>：这表示要授予权限的用户。<code>'username'@'%'</code>是用户的账户名，它由用户名和主机名组成。你需要将 <code>'username'</code>和 <code>'%'</code> 替换为实际的值。</li></ul><p>得有足够的权限才能使用 <code>GRANT</code>。</p><p>创建完用户后<code>FLUSH PRIVILEGES</code>，当然这一步也是可有可无的，不影响使用。</p><p>如果你想要更改用户名可以使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL">RENAME <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;old_username&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;new_username&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><h1 id="远程连接-mysql">远程连接 MySQL</h1><p>既然有了 MySQL 服务器，那就试一试远程连接。</p><h2 id="修改-mysql-配置文件">修改 MySQL 配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano /etc/mysql/my.cnf<br></code></pre></td></tr></table></figure><p>进入编辑栏，添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nano">[mysqld]<br>bind-address = 0.0.0.0<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172013842.webp" alt="Linux与MySQL-5.png"><figcaption aria-hidden="true">Linux与MySQL-5.png</figcaption></figure><p>最后就重启一下 MySQL 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo service mysql restart<br></code></pre></td></tr></table></figure><h2 id="用-datagrip-测试结果">用 DataGrip 测试结果</h2><p>进入 DataGrip，File 点击 Data Source，点击+号，选择 MySQL。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172013182.webp" alt="Linux与MySQL-6.png"><figcaption aria-hidden="true">Linux与MySQL-6.png</figcaption></figure><p>填写下 name，host，user。<code>host</code> 就是你的 linxu 主机的 ip地址，<code>user</code> 是 MySQL 的你要使用的用户。<code>port</code>也有可能不是 3306，有时候需要查询一下。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407172013070.webp" alt="Linux与MySQL-7.png"><figcaption aria-hidden="true">Linux与MySQL-7.png</figcaption></figure><h3 id="进程号和端口号的区别">进程号和端口号的区别</h3><ol type="1"><li>进程号（ProcessID，PID）：每个在操作系统中运行的进程都有一个唯一的进程号。这个进程号是由操作系统在进程创建时自动分配的。进程号可以用来唯一标识一个进程，例如在任务管理器中查看进程的状态，或者在命令行中结束一个进程。</li><li>端口号（Portnumber）：在网络通信中，端口号用来标识主机上的特定应用程序。每个网络服务都监听一个或多个端口，当其他主机想要与这个服务通信时，就需要连接到这个端口。例如，HTTP服务通常监听 80 端口，HTTPS 服务通常监听 443 端口，MySQL 服务通常监听3306 端口。</li></ol><p>所以，进程号和端口号是两个完全不同的概念，它们用来标识的也是两个完全不同的东西：进程号标识的是进程，端口号标识的是网络服务。</p><h1 id="笔者的话">笔者的话</h1><p>又是没什么可说的一天。最初我是打算一天一篇博客写下去的，但是这还没开始几天就开始疲倦了，短暂兴奋过后就是长久的烦躁，自律之类的话完全是虚假的，最终还是需要习惯，到无意识开始才是真正做到了。</p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 使用Visio建立数据库模型图 </title>
    <link href="/2024/07/16/%E4%BD%BF%E7%94%A8Visio%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9E%8B%E5%9B%BE/"/>
    <url>/2024/07/16/%E4%BD%BF%E7%94%A8Visio%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9E%8B%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>为了方便建立数据库的模型图，我们可以使用 Visio的一个模板，使用它的方向工程，能够快速建立数据模型的图片，非常方便。</p><h1 id="mysql-connector">MySQL Connector</h1><p>有些电脑在安装 MySQL 的时候不安装 MySQL Connector，这导致之后加入ODBC 数据源的时候只有一些微软自带的数据库，例如 SQL Server，但是没有MySQL 的选项。</p><p>我们可以通过 Installer 来进行安装 MySQL Connector。</p><p>先打开 MySQL Installer，点击右边的 Add。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407162206071.webp" alt="Visio使用反向工程建立数据模型-1.png"><figcaption aria-hidden="true">Visio使用反向工程建立数据模型-1.png</figcaption></figure><p>选择 Connector/ODBC，选择自己的版本，一般六十四位，这个 Connector的版本跟 MySQL 的版本是不同的，只用管是 8.0 还是5.7，这个得一样，小版本不用管，可以不同。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407162206917.webp" alt="Visio使用反向工程建立数据模型-2.png"><figcaption aria-hidden="true">Visio使用反向工程建立数据模型-2.png</figcaption></figure><h1 id="通过-visio-来建立数据模型图片">通过 Visio来建立数据模型图片</h1><p>选择数据库模型图，注意用管理员模式打开。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407162207854.webp" alt="Visio使用反向工程建立数据模型-3.png"><figcaption aria-hidden="true">Visio使用反向工程建立数据模型-3.png</figcaption></figure><p>进入后，点击上面的数据库，选择反向工程，选择数据源，然后就可以了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407162208613.webp" alt="Visio使用反向工程建立数据模型-4.png"><figcaption aria-hidden="true">Visio使用反向工程建立数据模型-4.png</figcaption></figure><p>注意选择 ODBC。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407162208536.webp" alt="Visio使用反向工程建立数据模型-5.png"><figcaption aria-hidden="true">Visio使用反向工程建立数据模型-5.png</figcaption></figure><h1 id="笔者的话">笔者的话</h1><p>画图也是重要的一项工作。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Visio</category>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Visio</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 利用github page和hexo搭建个人博客 </title>
    <link href="/2024/07/15/%E5%88%A9%E7%94%A8github%20page%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/07/15/%E5%88%A9%E7%94%A8github%20page%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><strong>需要环境</strong>：</p><ol type="1"><li><p>git</p></li><li><p>node</p><p>请提前下载</p></li></ol><h1 id="github">Github</h1><h2 id="github邮箱创建">github邮箱创建</h2><p>这里就不加多言了，没什么好说的。</p><h2 id="创建github-pages">创建github Pages</h2><h3 id="创建仓库">创建仓库</h3><p>点击右上角的加号，点击<strong>NewRepository</strong>，在Repository的name里面填入，username.github.io，username就是你的github的用户名，注意不是邮箱名，是你的用户名，这个以github.io结尾的地址就是你之后的域名。</p><h3 id="设置ssh">设置SSH</h3><p>SSH的目的就是更加安全的免密登录。</p><h4 id="生成ssh秘钥">生成ssh秘钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后就是一路Enter，这时打开你的C盘，在用户/你的用户名文件夹下，有个.ssh文件夹，<strong>注意</strong>前面带.的文件夹都需要把文件的隐藏给先打开。</p><p>然后有个.hub后缀的文件，这是公钥可以给别人看的，还有一个没有后缀的文件，这个是私钥，不能给比人看。</p><p>我们要用的就是这个.hub文件，选择用记事本打开，全选，复制。</p><h4 id="配置github">配置GitHub</h4><p>打开你的github，现在点击你的头像，然后点击Settings，在access中找到<strong>SSHAnd GPG keys</strong>，点击<strong>New SSHkey</strong>，title随便命个名字，<strong>Key</strong>这一栏，粘贴之前复制的.hub文件里面的内容，最后点击<strong>AddSSH key</strong></p><h4 id="打开github-pages">打开GitHub Pages</h4><p>这一部分我也忘了，不过挺简单的，我之所以忘记就是因为这一部分不难，没卡到我，直接看github的官方文档就行：<a href="https://docs.github.com/en/pages/quickstart">Pages文档</a>。</p><p>这时候点击上方的<strong>VisitSite</strong>，你就可以看看是否成功了，可以点进去没有404就说明成功了。</p><h1 id="hexo">Hexo</h1><h2 id="安装hexo">安装Hexo</h2><p>找一个空的文件夹来存放Hexo的程序文件，打开文件夹，右键，选择Git Bashhere（<em>前提是你得先安装过git，并对git进行配置</em>），使用npm一键安装Hexo程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>因为网络问题，会很慢，如果能够科学上网，那会快非常多。</p><p>安装完成后，初始化hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init      <span class="hljs-comment"># 初始化</span><br>npm install    <span class="hljs-comment"># 安装组件</span><br></code></pre></td></tr></table></figure><p>完成后依然在git控制台中输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g   <span class="hljs-comment"># 生成页面</span><br>hexo s   <span class="hljs-comment"># 启动预览</span><br></code></pre></td></tr></table></figure><p><strong>访问</strong><code>http://localhost:4000</code><strong>，出现 Hexo默认页面，本地博客安装成功！</strong></p><p>如果页面加载不出来，可能是<code>端口</code>被占用了，<strong>Ctrl+C</strong>关闭服务器，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server -p port <span class="hljs-comment"># port是你电脑中空闲的端口号 </span><br></code></pre></td></tr></table></figure><p>Hexo文件夹的目录如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">_config.yml  <span class="hljs-comment"># 网站的配置信息</span><br>package.json <span class="hljs-comment"># 应用程序的信息</span><br>scaffolds    <span class="hljs-comment"># 模板文件夹</span><br><span class="hljs-built_in">source</span>       <span class="hljs-comment"># 存放用户资源，Md文件</span><br>_posts   <span class="hljs-comment"># 放md文件的地方，算是最常打开的文件夹了</span><br>themes     <span class="hljs-comment"># 主题文件夹</span><br>public      <span class="hljs-comment"># 网站文件</span><br></code></pre></td></tr></table></figure><h2 id="部署hexo到github-pages上">部署Hexo到GitHub Pages上</h2><p>刚刚的是部署到了本地，如果要让别人也能看到，就要部署到服务器上，GithubPages免费可用，所以我们部署到这上面。</p><p>安装<strong>hexo-deployer-git</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后**修改 _config.yml** 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repository: git@github.com:用户名/用户名.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>然后git控制台，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d <span class="hljs-comment"># d就是指deploy，部署</span><br></code></pre></td></tr></table></figure><p><strong>完成！</strong></p><p>这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code>就可以看到 Hexo 网站了。</p><h1 id="绑定域名">绑定域名</h1><p>可能用用户名.github.io来登录不是很好看，所以可以买个域名，用域名来登录，显得更专业一些，这里面不少的坑，花费了不少时间才一个又一个解决了问题。</p><h2 id="购买域名">购买域名</h2><p>首先要购买域名, 作为一名穷学生, 当然是要买最便宜的域名,在网上发现有个网站卖的域名还挺便宜的, <a href="https://www.namesilo.com/">namesilo</a>，先注册账号,之后找到个合适的域名,进行购买, 之所以选择这个网站还是因为这个网站购买服务器可以用支付宝支付,非常方便.</p><p>一刀就能拿下一个域名.</p><p>买完后, 点击右上角的用户图标, 点击<strong>My Account</strong>,进入后点击<strong>Domain Manager</strong>,<em>这可能需要你先填写一下身份信息, 这些信息我都是随便填的,好像是没太大的影响</em>, 之后在你购买的域名左边,点击那个蓝色小球<strong>Manage DNS for this domain</strong>,删除里面的所有默认.</p><p>进入下一步.</p><h2 id="与git联系">与Git联系</h2><p>进入你的github, 点击右上角用户图标, 选择<strong>settings</strong>,进入后点击<strong>Pages</strong>, Add a domain, 之后填写你购买的域名,切记, 不要加入www, 然后就一路next就行, 会生成两个txt信息, 复制一下,一会得用.</p><p>进入namesilo, 回到Manage DNS for this domain界面, 选择添加txt,把git中生成的第一行粘到第一个格子里, 第二行粘到第二个格子里. OK!</p><p>然后win+R, 输入cmd进入控制台, ping一下你的github pages,复制一下ipv4地址, 继续在刚才的界面, 选择添加A, 第一个格子不用填,第二个格子填入ip地址.</p><p>之后添加CNAME, 第一个格子www, 第二个格子添加你的github pages网址.</p><p>对了, 以上三条的ttl都是3600, 也就是十分钟.</p><p>然后返回github, 回到pages, 点击verify, 等待验证, 这可能需要一些时间,你或许要等个一小时? 我是等了半小时大约, 才行.</p><p>然后到你的.io仓库中,<strong>settings</strong>-&gt;<strong>pages</strong>, 往下翻,到<strong>Custom domain</strong>, 输入你的域名, 不加www, 点击sava,等待验证, 可能又是需要一些时间, 我在这里卡了非常多的时间,因为我最开始没有去验证我的域名, 就是我先进行的这一步,没有进行上面的过程, 所以一直失败. 需要一步一步来, 才能最后成功.</p><p>等验证成功后, 选择enforce https, 不然你是用的是http协议,会显示不安全, 挺难受的. <em>我是一个强迫症</em></p><p>OK, 大功告成! 现在你可以用你的域名来登陆了.</p><h1 id="hexo-常用指令">Hexo 常用指令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hexo clean <span class="hljs-comment"># 清除缓存,方便后续部署</span><br><br>Hexo new <span class="hljs-string">&quot;文件名字&quot;</span> <span class="hljs-comment"># 创建一个新的文件 直接生成一个md文件加入_post好像不太行</span><br>Hexo s      <span class="hljs-comment"># 预览效果</span><br>Hexo g     <span class="hljs-comment"># 生成</span><br>Hexo d     <span class="hljs-comment"># 部署</span><br></code></pre></td></tr></table></figure><h1 id="主题">主题</h1><p>我们可以对hexo进行优化, 用其他人的主题来美化自己的网站,让其更加好看.</p><p>这里就不加赘述了，大家可以在网上找一些自己喜欢的主题，详见 <a href="https://hexo.io/themes/">hexo主题</a>。</p><h1 id="笔者的话">笔者的话</h1><p>好像没什么说的了。话休絮烦。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 香橙派加上Linux初学习</title>
    <link href="/2024/07/15/%E9%A6%99%E6%A9%99%E6%B4%BE%E5%8A%A0%E4%B8%8ALinux%E5%88%9D%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/15/%E9%A6%99%E6%A9%99%E6%B4%BE%E5%8A%A0%E4%B8%8ALinux%E5%88%9D%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>最近因为看深入了解计算机系统这本书，这本书要求使用 linux来进行一些实验，所以萌生了想要弄台<em>Linux</em>电脑的想法，想起来就做。正巧，B站最近老是给我推送开发板的内容，我是十分感兴趣的，毕竟我想要亲手做一些东西，刚好看到九十九的香橙派zero 3 可以充当 linux 电脑，于是研究一下就直接买了一套，买的是 1 G版本的，加上内存卡，电源，扩展板，外壳，连接线，一共不到两百块就拿下了一台Linux 电脑。</p><h1 id="开始组装">开始组装</h1><p>就是把外壳给装到开发板上，不过注意引脚，电扇的供电要插到固定的引脚上（有个5 V 还有个 GND 的引脚，插到这两个面才行。香橙派把对应的 pin都涂上颜色了，GND 是黑色，供电的 5 V涂得红色，而风扇的电线也有黑红两色，对应连接就行），因为我安装的时候没有拍照，所以这里就不放图片了。然后就没什么难度，也不需要螺丝就安装好了，没装散热片，不过还好。</p><p>最后的结果就是下图所示。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151134613.webp" alt="Linux学习-1.jpg"><figcaption aria-hidden="true">Linux学习-1.jpg</figcaption></figure><h2 id="引脚">引脚</h2><p>做一些东西总得学到一些什么东西，所以说我每学到什么新东西，我都会去查一查资料来试图真正弄明白这些东西。不过现在有AI 了，我用 Github Copilot 来帮我解答问题，chatGpt 4.0的模型，是真的好用。</p><hr><blockquote><p>在电子和计算机硬件中，"引脚"（Pin）通常指的是连接器或集成电路（IC）的物理接口。这些引脚用于传输电力或数据。</p></blockquote><p>常见的引脚类型：</p><ol type="1"><li><strong>电源引脚（PowerPins）</strong>：这些引脚提供电源给设备或电路。例如，5 V 引脚提供 5伏特的电压。</li><li><strong>接地引脚（GroundPins）</strong>：这些引脚提供电路的公共接地点，也称为零电压参考点。所有的电源和信号都相对于这个接地点进行测量。</li><li><strong>数字输入/输出引脚（Digital I/OPins）</strong>：这些引脚可以被编程为输入或输出，用于读取数字信号（如开关状态）或控制数字设备（如LED 灯）。</li><li><strong>模拟输入/输出引脚（Analog I/OPins）</strong>：这些引脚可以读取或输出模拟信号。模拟输入常用于读取模拟传感器（如温度传感器），模拟输出常用于控制设备（如伺服电机）。</li><li><strong>特殊功能引脚</strong>：一些引脚具有特殊的功能，如串行通信（如UART，SPI，I 2 C），脉冲宽度调制（PWM）输出，外部中断等。</li></ol><p>接地引脚的简称就是 GND</p><h2 id="不同类型的-ubuntu">不同类型的 Ubuntu</h2><p>有两种类型，其实 Linux 都有两种类型 1. Desktop 2. Server</p><p>很容易区分，桌面版大一些，就拿 ubuntu举例，桌面版比服务器版大一倍。</p><p>不过桌面版有可视化界面，服务器版就只有敲命令行了。</p><h2 id="烧录">烧录</h2><p>插上 tf 卡，打开<em>balenaEtcher</em>，我们用这个软件进行 tf卡的烧录，选择 Ubuntu 的映像，以 img 结尾的，点击烧录，等一会，然后就 OK了。</p><p>将 tf 卡查到香橙派的 tf 卡槽里面，硬件的准备就结束了。</p><h1 id="连接电脑">连接电脑</h1><h2 id="hdmi-的分类">Hdmi 的分类</h2><p>Hdmi 有三种类型 1. Hdmi 2. Mini Hdmi 3. Micro Hdmi</p><p>我起初认为只有两种，所谓的 minihdmi 和 microhdmi是一样的，结果是不同的，microhdmi 比 typec 还要小。</p><h2 id="ssh-连接电脑">SSH 连接电脑</h2><p>因为我买错线了，没有 microHDMI，所以没办法直接连接，所以就是用<em>MobaXterm</em>来进行 ssh 远程连接。</p><h3 id="什么是-ssh">什么是 SSH</h3><p>其实之前我也没有用过，这次是初次接触 SSH。 以下为 AI 的回答。</p><blockquote><p>SSH，全称为 SecureShell，是一种网络协议，用于在不安全的网络上进行安全的远程登录和其他安全网络服务。SSH提供了一个安全的通道，使你可以在这个通道上执行命令，传输文件，或者打开图形用户界面。</p></blockquote><blockquote><p>SSH的主要特点是强大的安全性。它使用了公钥加密技术来验证远程计算机和允许远程计算机验证用户。这意味着，即使网络被监听，也无法获取到用户的密码或其他敏感信息。</p></blockquote><h3 id="使用-mobaxterm-进行-ssh-连接">使用 MobaXterm 进行 SSH 连接</h3><p>首先打开 MobaXterm</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151136106.webp" alt="Linux学习-1.png"><figcaption aria-hidden="true">Linux学习-1.png</figcaption></figure><p>点击左上角的 Sessions，选择 <em>New session</em></p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151137660.webp" alt="Linux学习-2.png"><figcaption aria-hidden="true">Linux学习-2.png</figcaption></figure><p>点击 SSH，因为咱们要进行 SSH 连接。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151137558.webp" alt="Linux学习-3.png"><figcaption aria-hidden="true">Linux学习-3.png</figcaption></figure><p>然后就只需要输入你要连接的设备的 ipv 4地址就行，点击确定，就可以了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151137307.webp" alt="Linux学习-4.png"><figcaption aria-hidden="true">Linux学习-4.png</figcaption></figure><p>然后就进入 Linux 系统中了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151137809.webp" alt="Linux学习-5.png"><figcaption aria-hidden="true">Linux学习-5.png</figcaption></figure><p>接下来就可以操控电脑了。</p><h4 id="获得机器-ip-地址">获得机器 IP 地址</h4><p><strong>但请注意，这里有个关键问题，就是如何得到设备的 IP地址，我只有一台机器，没有屏幕，该怎么得到？</strong></p><p>这里因为没有显示器，没法连接蓝牙，于是就先连接网线进行有线连接了。</p><p>因为动态主机配置协议（DHCP）导致有线连接与无线连接得到的 IP地址是不一样的，也就是说，我现在用 ssh 连接上了，之后换成 wifi连接网络，还是要更换 session 的。</p><p>有两个方法</p><h5 id="第一种方法">第一种方法</h5><p>直接看路由器的连接信息，一般都是路由器直接输入192.168.1.1，直接进入网关，然后看有线连接，直接就能查到设备的 IP地址。我这里第一次连接的时候没有显示，应该是运营商送的<em>光猫+路由器</em>有点问题（重启后就又能搜到了），所以用了第二种方法。</p><h5 id="第二种方法">第二种方法</h5><p>用 cmd</p><ol type="1"><li>获得本网段的地址</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CMD"><span class="hljs-built_in">ipconfig</span> /all<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151139122.webp" alt="Linux学习-6.png"><figcaption aria-hidden="true">Linux学习-6.png</figcaption></figure><p>一查，上图就是我的 IPv 4 地址，网段就是 192.168.1.0</p><ol start="2" type="1"><li>然后清空 arp 映射表</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CMD">arp -d *<br></code></pre></td></tr></table></figure><p>不过好像不清空也不影响，只是比较乱。</p><p>而且一般用户没法删，必须的以<em>管理员</em>身份才能使用该指令。</p><ol start="3" type="1"><li>之后遍历网段里面的所有 IP</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs CMD"><span class="hljs-keyword">for</span> /L %i <span class="hljs-keyword">IN</span> (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">254</span>) <span class="hljs-keyword">DO</span> <span class="hljs-built_in">ping</span> -w <span class="hljs-number">1</span> -n <span class="hljs-number">1</span> <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.%i<br><br></code></pre></td></tr></table></figure><ul><li><code>/L</code> 表示这是一个范围循环。<code>%i</code>是循环变量，<code>(1,1,254)</code> 定义了循环的范围和步长，意思是从 1开始，每次增加 1，直到 254。</li><li><code>DO</code> 就是做，每次循环都要做，后面跟着要做的事情。</li><li><code>ping -w 1 -n 1 192.168.1.%i</code>：这是在每次循环中执行的命令。<code>ping</code>是一个网络工具，用于测试网络连接。<code>-w 1</code>设置了等待每个回应的超时时间为 1 毫秒，<code>-n 1</code> 设置了发送 ping请求的次数为 1 次。<code>192.168.1.%i</code> 是被 ping 的 IP地址，<code>%i</code> 是循环变量，所以这个命令会依次ping <code>192.168.1.1</code> 到 <code>192.168.1.254</code>的所有地址。</li></ul><ol start="4" type="1"><li>然后通过 arp -a 命令读取缓存的映射表获取所有与本机连接的设备的 Mac地址</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CMD">arp -a<br></code></pre></td></tr></table></figure><ol start="5" type="1"><li>最后比照能确定的 IP 地址找到新加入设备的 IP 地址</li></ol><p>这最后一步挺麻烦的，我比照出来了，但是并不是特别确定。最后还是重启了下路由器，来找到 IP 地址的。</p><h2 id="使用-linux-来连接-wifi">使用 Linux 来连接 wifi</h2><p>网线离我挺远的，所以还是想要使用 Wifi 连接网络。其实直接在 Server中敲命令就可以。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iwconfig # 查看当前连接的WIFI网络信息，如Bit Rate。<br></code></pre></td></tr></table></figure><p>这是我已经连接过的结果：</p><p><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151140013.webp"></p><ol type="1"><li><strong>eth0</strong>：这通常是第一个以太网接口的名称。"eth"是"Ethernet"的缩写，"0"表示这是第一个接口。这个接口通常用于有线网络连接。</li><li><strong>wlan0</strong>：这通常是第一个无线网络接口的名称。"wlan"是"WirelessLAN"的缩写，"0"表示这是第一个接口。这个接口通常用于无线网络连接。</li><li><strong>lo</strong>：这是环回接口（loopbackinterface）的名称。这个接口主要用于网络服务的测试和本地通信。当你向环回接口发送数据时，数据会立即返回，不会真正发送到网络上。环回接口的IP 地址通常是 127.0.0.1。</li></ol><p>上面是查看已经连接的网，一下才是真的连接没有的 wifi。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">nmcli dev wifi # 查找可用的wifi网络<br>nmcli dev wifi connect &#x27;Your_WiFi_SSID&#x27; password &#x27;Your_WiFi_Password&#x27;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">用这个命令来连接可用的网络</span><br></code></pre></td></tr></table></figure><p>这样就结束了，再同上面介绍的，使用新的 Ip 地址来进行 ssh连接，这时候可以使用下面的指令来查找 Ip 地址。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr show # 能够显示IP地址<br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151141616.webp" alt="Linux学习-8.png"><figcaption aria-hidden="true">Linux学习-8.png</figcaption></figure><p>最后拔掉网线，大功告成。</p><p><strong>对了，有可能会出现权限不够的情况</strong></p><p>那就 <code>sudo</code>，前面加一个。它的全称是 "SuperUserDO"。它用于执行需要超级用户（也就是 root 用户）权限的命令。</p><h3 id="分页查看器">分页查看器</h3><p>如果遇到进入一页，底部有什么 linesx-xx，然后可以换页的，那么你就是进入到了<em>分页查看器</em>中，按<code>Space</code> 键或 <code>Enter</code> 键来查看更多的行；可以按<code>q</code> 键来退出分页查看器。</p><h1 id="正式使用-linux">正式使用 Linux</h1><p>总算是进入正式进入 Linux了，到这里我已经花费了整整两个小时写一篇博客了，总算是认识到写博客的艰难了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151142511.webp" alt="Linux学习-11.png"><figcaption aria-hidden="true">Linux学习-11.png</figcaption></figure><p>如果长时间不登录的话，会中断 ssh 连接。</p><h2 id="创建新用户">创建新用户</h2><p>先查看下用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看当前登录的用户</span><br>who<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看系统中所有的用户</span><br>cat /etc/passwd<br></code></pre></td></tr></table></figure><p>现在是用 root 登录，总怕会因为权限高而弄坏设备，毕竟修一次不便宜。所以创建新用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新用户</span><br>sudo useradd 新用户的名字<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">为新用户设置密码</span><br>sudo passwd 新用户的名字<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">之后就让你输入密码</span><br></code></pre></td></tr></table></figure><p><em>注意，这里的密码甚至连位数都不显示，就是完全的空白，不过这样的安全性确实是最高的。</em></p><p>之后就切换用户到新建的用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">切换到新的用户</span><br>su 新用户的名字<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">之后要输入密码</span><br></code></pre></td></tr></table></figure><h3 id="定制终端提示符">定制终端提示符</h3><p>之后你会发现跟 root 用户不同，新用户的提示栏只有<code>$</code>，所以想看看我们是谁就要输入指令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看当前用户名</span><br>whoami # 也就是who am i，我是谁<br></code></pre></td></tr></table></figure><p>在 Linux 中，终端提示符的显示是可以定制的，它通常由环境变量<code>PS1</code> 控制。<code>root</code>用户和普通用户的默认提示符可能会有所不同，这是为了提醒用户他们当前是以哪种权限在操作。</p><p>想要更改提示栏就要更改文件，这个文件就是 <code>.bashrc</code>文件（bash 这个 shell 下更改了才有用）。找到对应的 <code>.bashrc</code>文件，位置在 <code>/home/你的用户名</code> 或者是<code>~</code>，这俩是等效的，（<code>~</code> 是主目录的简写）。</p><p><code>ls xxx -a</code> 表示显示隐藏，这个 <code>-a</code> 可以添加到<code>ls</code> 后的任何地方。</p><blockquote><p>在 Linux 系统中，<code>~/.bashrc</code> 是一个隐藏的 shell脚本，当用户运行交互式 bash shell时，这个脚本会被执行。这个文件通常用于设置用户特定的环境变量，如命令别名、shell提示符、PATH 变量等。</p></blockquote><p>接着就是用 nano 编辑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用nano编辑.bashrc</span><br>nano ~/.bashrc<br></code></pre></td></tr></table></figure><p>进入编辑页面后就输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nano"># 设置PS1<br>PS1=&quot;\u@\h:\w\$ &quot;<br></code></pre></td></tr></table></figure><h4 id="nano-编辑器的使用">Nano 编辑器的使用</h4><p>在 <code>nano</code> 编辑器中，你可以按下 <code>Ctrl + O</code>来保存你的更改。这将会打开一个提示，询问你要将文件保存到哪里。默认的位置是你最初打开的文件。</p><p>在你按下 <code>Ctrl + O</code> 后，底部会显示一个提示，如<code>File Name to Write: /home/username/.bashrc</code>。如果你想将文件保存到这个位置，只需按下<code>Enter</code> 键即可。</p><p>然后，你可以使用 <code>Ctrl + X</code> 来退出 <code>nano</code>编辑器。</p><p>总的来说，保存并退出 <code>nano</code> 编辑器的步骤如下：</p><ol type="1"><li>按 <code>Ctrl + O</code> 来保存文件。</li><li>按 <code>Enter</code> 来确认文件名。</li><li>按 <code>Ctrl + X</code> 来退出编辑器。</li></ol><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151143524.webp" alt="Linux学习-12.png"><figcaption aria-hidden="true">Linux学习-12.png</figcaption></figure><h4 id="不同-shell-导致的问题">不同 shell 导致的问题</h4><p>执行完上面的步骤，发现还是只有一个<code>$</code>，这是因为上面的操作更改的只是 bash 这种 shell的提示符，我们可以通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo $SHELL # Linux区分大小写，你要是输入$shell就什么都不会显示<br></code></pre></td></tr></table></figure><p>来查看默认的 shell。</p><p>最后发现这个<em>Orangepizero 3_1.0.2_ubuntu_jammy_server_linux6.1.31.7</em>的默认 shell 位于 <code>bin/sh</code>中，也就是说使用的应该是类似 <code>dash</code> 的 shell，而非<code>bash</code>，所以上面的更改就没啥用处。</p><p>但是，所幸我们能够更改默认的 shell。</p><p>有两个查看 shell 的指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看默认shell</span><br>echo $SHELL<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看当前shell</span><br>ps -p $$<br></code></pre></td></tr></table></figure><p>这个 cmd 下面就表示当前的 shell</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151143874.webp" alt="Linux学习-13.png"><figcaption aria-hidden="true">Linux学习-13.png</figcaption></figure><p>接着更改默认 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chsh -s /bin/bash # chsh也就是change shell，这里将dash改为了bash<br></code></pre></td></tr></table></figure><p>这样默认的 shell 就改为了 bash，而提示符也就显示正确了，正如 PS 1所设置的那样。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151144871.webp" alt="Linux学习-14.png"><figcaption aria-hidden="true">Linux学习-14.png</figcaption></figure><h2 id="linux-的文件目录">Linux 的文件目录</h2><blockquote><p>文件是对 I/O 设备的抽象</p></blockquote><p>Linux 很好地体现了这一点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls / # 查看所有文件<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开头有/说明是绝对位置，从root目录开始计算</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开头没/说明是相对位置，从当前位置开始计算，如果在home输入 <span class="hljs-built_in">ls</span> 我的用户名，它等效于<span class="hljs-built_in">ls</span> /home/我的用户名</span><br></code></pre></td></tr></table></figure><p>显示如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151144599.webp" alt="Linux学习-9.png"><figcaption aria-hidden="true">Linux学习-9.png</figcaption></figure><p>其实就是这张图：</p><p><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151146730.webp"></p><h2 id="创建文件夹">创建文件夹</h2><p>系统默认不会自动创建对应的 <code>/home/username</code> 目录，有两种方法</p><p>一是在创建用户是添加个 <code>-m</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新用户并创建主目录</span><br>sudo useradd -m 用户的名字<br></code></pre></td></tr></table></figure><p>二是如果已经创建了用户，就通过 <code>mkdir</code>来创建目录，<code>chown</code> 来更改目录所有者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建主目录</span><br>sudo mkdir /home/newuser<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更改目录所有者</span><br>sudo chown 用户的名字 /home/newuser<br></code></pre></td></tr></table></figure><p>需要 root 权限。而且如果不更改目录所有者，默认所有者是root，这时候想要在该目录下创建什么东西，如果是普通用户都是不可以的，因为权限不够。</p><h1 id="激动人心的-helloworld">激动人心的 hello，world！</h1><p>总算是可以写 hello，world了，毕竟我花费颇多财力，时间只为这个，这是我从小白成为大神的第一步！</p><p>这里使用 c 语言。</p><p>首先<em>新建文件夹</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir ~/myfolder<br></code></pre></td></tr></table></figure><p>切换到这个文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/myfolder<br></code></pre></td></tr></table></figure><p>新建 c 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch hello.c<br></code></pre></td></tr></table></figure><p>然后打开文件， nano 也好，vim 也罢，都行开始敲经典代码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano hello.c<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br>vim hello.c<br></code></pre></td></tr></table></figure><p><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151148723.webp"></p><p>这里使用 nano，因为方便。</p><p>然后用 gcc 来编译程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc hello.c -o hello<br></code></pre></td></tr></table></figure><p>这个命令是使用 <code>gcc</code> 编译器来编译 C程序的命令。下面是这个命令各部分的详细解释：</p><ul><li><code>gcc</code>：这是 GNU 编译器集合（GNU CompilerCollection）的一部分，是用来编译 C 程序的工具。</li><li><code>hello.c</code>：这是你要编译的源代码文件。在这个例子中，我们正在编译一个名为<code>hello.c</code> 的文件。</li><li><code>-o</code>：这是一个选项，用来指定输出文件的名称。<code>gcc</code>默认会创建一个名为 <code>a.out</code> 的输出文件，但你可以使用<code>-o</code> 选项来改变这个名称。</li><li><code>hello</code>：这是 <code>-o</code>选项的参数，表示输出文件的名称。在这个例子中，我们正在创建一个名为<code>hello</code> 的输出文件。</li></ul><p>所以，<code>gcc hello.c -o hello</code> 这个命令的意思是“使用<code>gcc</code> 编译器来编译 <code>hello.c</code>文件，并将输出文件命名为 <code>hello</code>”。</p><p>最后文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./hello<br></code></pre></td></tr></table></figure><p>在终端中看到"Hello, World!"的输出。</p><p>结果如下：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151149838.webp" alt="Linux学习-16.png"><figcaption aria-hidden="true">Linux学习-16.png</figcaption></figure><h4 id="vim-编辑器的使用">Vim 编辑器的使用</h4><p>使用 vim 打开文件后，你可以按 <code>i</code>键进入插入模式，然后输入你的代码。当你完成后，按 <code>Esc</code>键退出插入模式，然后输入 <code>:wq</code> 并按 <code>Enter</code>键保存你的文件并退出 <code>vim</code>。</p><p>在 <code>vim</code> 编辑器中，<code>:wq</code>是一个命令，用于保存（write）当前的更改并退出（quit）编辑器。这个命令是在命令模式下输入的，你可以通过按<code>Esc</code> 键进入命令模式。</p><p>这个命令的各部分含义如下： -<code>:</code>：这个符号表示你要输入一个命令。在 <code>vim</code>中，许多命令都是以这个符号开始的。 -<code>w</code>：这个字母代表“write”，也就是保存。这个命令将会保存你对当前文件的所有更改。- <code>q</code>：这个字母代表“quit”，也就是退出。这个命令将会关闭<code>vim</code> 编辑器。</p><p>所以，<code>:wq</code> 命令的意思是“保存并退出”。这是一个非常常用的<code>vim</code> 命令。</p><h4 id="vim-与-nano-的区别">Vim 与 nano 的区别</h4><p><code>vim</code> 和 <code>nano</code>都是文本编辑器，但它们之间有一些关键的区别：</p><ol type="1"><li><strong>易用性</strong>：<code>nano</code>是一个简单易用的文本编辑器，它在底部显示所有可用的命令，这对于新手来说非常有用。相比之下，<code>vim</code>有一个较陡的学习曲线，但一旦你熟悉了它，你就可以非常高效地编辑文本。</li><li><strong>模式</strong>：<code>vim</code>使用不同的模式（例如普通模式、插入模式和命令模式）来执行不同的任务。这使得<code>vim</code>非常强大，但也可能使新手感到困惑。相比之下，<code>nano</code>没有模式，所有的操作都是直接执行的。</li><li><strong>自定义和扩展</strong>：<code>vim</code> 可以通过<code>.vimrc</code> 配置文件进行高度自定义，你可以使用它来改变<code>vim</code> 的行为，或者添加新的功能。<code>vim</code>还有一个活跃的插件生态系统，你可以使用插件来进一步扩展 <code>vim</code>的功能。相比之下，<code>nano</code> 的自定义和扩展能力较弱。</li></ol><h4 id="查看-linux-中是否安装了某个软件">查看 Linux中是否安装了某个软件</h4><p>以 lm-sensors 为例</p><p>使用一下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dpkg -l | grep lm-sensors # 基于debian的系统可以这样<br></code></pre></td></tr></table></figure><p>这个命令是由两个子命令组成的，它们通过管道（<code>|</code>）连接在一起。下面是这个命令各部分的详细解释：</p><ul><li><code>dpkg -l</code>：<code>dpkg</code> 是 Debian 和基于 Debian的系统（如 Ubuntu）的包管理器。<code>-l</code>选项用于列出所有已安装的包。所以，<code>dpkg -l</code>命令的输出是你的系统上所有已安装的包的列表。</li><li><code>|</code>：这个符号是管道，它将前一个命令的输出作为后一个命令的输入。在这个例子中，我们正在将<code>dpkg -l</code> 的输出传递给 <code>grep</code> 命令。</li><li><code>grep lm-sensors</code>：<code>grep</code>是一个用于文本搜索的工具。它会搜索输入中的每一行，并输出匹配给定模式的行。在这个例子中，我们正在搜索包含<code>lm-sensors</code> 的行。</li></ul><p>所以，<code>dpkg -l | grep lm-sensors</code>这个命令的意思是“列出所有已安装的包，然后搜索包含<code>lm-sensors</code> 的行”。如果 <code>lm-sensors</code>已经被安装，这个命令将会输出一个包含 <code>lm-sensors</code> 的行。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407151150377.webp" alt="Linux学习-17.png"><figcaption aria-hidden="true">Linux学习-17.png</figcaption></figure><h4 id="退出-shell-会话">退出 shell 会话</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">退出当前会话</span><br>logout<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br>exit<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br>Ctrl + D<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">立即关机</span><br>sudo shutdown -h now<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启系统</span><br>sudo reboot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">请注意，shutdown和reboot命令需要root权限，所以你可能需要使用sudo来运行它们。</span><br></code></pre></td></tr></table></figure><h1 id="笔者的话">笔者的话</h1><p>这是我之前费了好长时间写的文章，今天找出来了，我有时自己写博客会想，花费这么长的时间去写一些已经会的知识有什么用呢？现在翻出来这篇两个月前写的博客，我发现有些知识我已经忘了，这可能就是写博客的一些最为简单的意义了，帮助别人，也能帮助自己。</p>]]></content>
    
    
    <categories>
      
      <category>系统</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>Linux</tag>
      
      <tag>香橙派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> 使用IDM下载速度过慢 </title>
    <link href="/2024/07/14/%E4%BD%BF%E7%94%A8IDM%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2/"/>
    <url>/2024/07/14/%E4%BD%BF%E7%94%A8IDM%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2/</url>
    
    <content type="html"><![CDATA[<p>我在下载 github 中的内容的时候，有时使用 IDM托管下载的时候速度会非常的慢，这时候就把IDM插件给关了，让浏览器去下载，速度很快。</p><p>唯一的问题就是下完后可能要等待比较长时间。</p>]]></content>
    
    
    <categories>
      
      <category>小技巧</category>
      
      <category>IDM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> HTML简介</title>
    <link href="/2024/07/13/HTML%E7%AE%80%E4%BB%8B/"/>
    <url>/2024/07/13/HTML%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>超文本标记语言，用来创建网页的框架，相当于人体的骨架。</p><p>如果使用的是 vscode，按下！可以快速生成 html 的结构。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132150852.webp?imageSlim" alt="快捷方式"><figcaption aria-hidden="true">快捷方式</figcaption></figure><p>之后生成下图所示：</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132151717.webp?imageSlim" alt="生成后的结构"><figcaption aria-hidden="true">生成后的结构</figcaption></figure><h2 id="一些插件">一些插件</h2><p>如果使用 vscode 的话一些插件必不可少。</p><p>如 <em>live server</em>，能够实时预览编写的代码。</p><h1 id="组成拆分">组成拆分</h1><p>!DOCTYPE 从英语来看就知道是声明类的，doc 就是文档，type不就是类型，也就是文档类型，后面跟着个 html，说明是声明了个 html文档。</p><p>html 包裹起来的就是整个 html 文件，html 元素也就 html页面的根元素。</p><p>head 包裹的是文档的 meta 数据，也就是元数据，Facebook all in元宇宙后不是改名为 meta 么，这个 meta就是元的意思。里面的内容就是一些配置内容，编码格式一类的。</p><p>​ title 包裹的就是标签名，就是浏览器页面最上面的内容。</p><p>​ <img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132155733.webp?imageSlim" alt="title标题"></p><p>body包裹的就是咱们真正费心要编写的，主体部分。也就是可见的页面内容。</p><h2 id="元素与标签">元素与标签</h2><p>html中元素和标签是一个意思，值得就是<em>尖括号包围的关键词</em>。</p><h1 id="基础元素">基础元素</h1><p>这里我只介绍一些十分基础的标签以及我觉得挺有意思的标签。</p><p><strong>写标签的时候都用小写。</strong></p><h3 id="标题">标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是一个二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>这是一个三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>这是一个四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>这是一个五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>这是一个六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132203988.webp?imageSlim" alt="标题的显示"><figcaption aria-hidden="true">标题的显示</figcaption></figure><h3 id="段落">段落</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="分行">分行</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p>进行分行的时候用的，能把一段话分成根据 br 的插入分成许多行。</p><h3 id="链接">链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.destinyguide.top&quot;</span>&gt;</span>这是一个链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="图片">图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://tree-1327913400.cos.apnanjing.myqcloud.com/imgs/202407132155733.webp?imageSlim&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;这是一个图片&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>src放的是图片的来源，我这里用的是网络资源，也可以使用本地资源，推荐使用相对路径也就是./的形式。</p><p>alt 的话就是 src 中没内容，或者是没加载出来资源的时候，就使用 alt里面的文字对用户进行解释这是什么。</p><h3 id="无序列表">无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个无序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个无序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个无序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最前面有小圆点。</p><h3 id="有序列表">有序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个有序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个有序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是一个有序列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p>前面有 1，2，3。会根据代码的前后顺序添加数字进行排列。</p><h3 id="自定义列表">自定义列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>这是一个自定义列表<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>这是一个自定义列表<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>这是一个自定义列表<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以没有 dt，dt 比 dd 要靠左一些。</p><p>自定义就是前面啥也没有了。</p><h3 id="表格">表格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>表格数据<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>表格数据<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>表格数据<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>表格数据<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>tr 是 table row，表示一行</p><p>td 是 table data，表示一格</p><p>th 是 table header，表示表头的单元格，相比 td 字体有所加粗</p><h3 id="表单">表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>action 属性定义了表单数据提交的目标 url。</p><p>lable 元素为表单添加了标签，提高了可访问性。</p><p>input 可以根据 type 的内容创建文本输入框，密码框等输入框的类型。</p><h3 id="按钮">按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>这是一个按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><p>仅仅是一个按钮。</p><h3 id="一些文字格式">一些文字格式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>这是一个粗体<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>这是一个加粗<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>    <br><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>这是一个斜体<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>这是一个强调<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">mark</span>&gt;</span>这是一个标记<span class="hljs-tag">&lt;/<span class="hljs-name">mark</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">small</span>&gt;</span>这是一个小字体<span class="hljs-tag">&lt;/<span class="hljs-name">small</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>这是一个删除线<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span>这是一个下划线<span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br>1<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>这是一个下标<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <br>1<span class="hljs-tag">&lt;<span class="hljs-name">sup</span>&gt;</span>这是一个上标<span class="hljs-tag">&lt;/<span class="hljs-name">sup</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br></code></pre></td></tr></table></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132258770.webp?imageSlim" alt="效果如上所示，与上面的代码一一对应"><figcaption aria-hidden="true">效果如上所示，与上面的代码一一对应</figcaption></figure><h3 id="缩写">缩写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">abbr</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;123&quot;</span>&gt;</span>WHO<span class="hljs-tag">&lt;/<span class="hljs-name">abbr</span>&gt;</span><br></code></pre></td></tr></table></figure><p>说是缩写，其实就是展示标签内的内容，WHO，当悬停在内容上时，显示的是title 里面的内容, 123。</p><h3 id="音频">音频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>controls如果有这个属性，浏览器会给你提供一个控制器，让你控制你的音频的播放之类的功能。</p><h3 id="视频">视频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p>controls如果有这个属性，浏览器会给你提供一个控制器，让你控制你的视频的播放之类的功能。</p><h3 id="内联框架">内联框架</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.destinyguide.top&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><p>显示 src 内部网页的内容。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132301181.webp?imageSlim" alt="网页中显示网页"><figcaption aria-hidden="true">网页中显示网页</figcaption></figure><h2 id="元素的分类">元素的分类</h2><p>块级元素</p><p>div 就是块级元素。独占一行，或者说一整块。</p><p>可以设置宽度，高度以及边距等样式属性。</p><p>行内元素（内联元素）</p><p>span 就是内联元素。可以很多个内联元素并存。</p><p>宽度默认由其内容决定。</p><p>div 和 span 是最常用的元素。</p><h1 id="笔者的话">笔者的话</h1><p>html暂时就写到这里了，其实没啥内容，当然也是我自己学的比较少，认知面较狭窄，所以只能写这么多。以后如果有更全面的认知，我会加以增改与补充。</p>]]></content>
    
    
    <categories>
      
      <category>语言</category>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Hexo与Fluid认识 </title>
    <link href="/2024/07/12/Hexo%E4%B8%8EFluid%E8%AE%A4%E8%AF%86/"/>
    <url>/2024/07/12/Hexo%E4%B8%8EFluid%E8%AE%A4%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="font-matter-介绍">font-matter 介绍</h1><p>我使用的是 obsidian，这个 font-matter也就是文档属性一栏，我这里列出来的都是一些我认为常用的，至于说更详细的请看<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter |Hexo</a>，当然这也只是一部分，因为 hexo还有不同的主题，主题可能会扩展一些font-matter，这就还要看主题的具体文档了。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122304348.webp" alt="这篇博客的font-matter"><figcaption aria-hidden="true">这篇博客的font-matter</figcaption></figure><p>这里img的两个都写错了，时候才发现，后面多加了个括号，真是眼拙。</p><h2 id="hexo-的-font-matter">Hexo 的 font-matter</h2><ul><li>title：就是文章的标题，在 obsidian 中可以用模板，然后 title中的值设置为  Hexo与Fluid认识  来根据你的文件名字自动命名。</li><li>date：显示建立的日期，也是用模板，date 值设为 1720713600000，当使用模板的时候就能自动生成。</li><li>excerpt：摘要部分。如果不写的话，fluid这个主题有个能够自动摘要的功能，打开后就能自动摘要。</li><li>tags：标签，之后能根据标签来看你写了哪些博客。</li><li>categories：分类，根据这个来分类，并且是有先后顺序的，要注意。</li></ul><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122301088.webp" alt="这里工具就是Hexo的父类"><figcaption aria-hidden="true">这里工具就是Hexo的父类</figcaption></figure><p>至于其他的就不再说了，我觉得没什么用处，对我而言。</p><h2 id="fluid-的-font-matter">Fluid 的 font-matter</h2><p>这里的一些属性需要先修改 themes-&gt;fluid-&gt;<code>_config.yml</code> 中的内容才可以打开。可以看<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F">配置指南| Hexo Fluid 用户手册</a>或者是看<code>_config.yml</code>，里面的注释非常之详细，相当崇拜了，因为我平时不怎么写注释。所以这里就不加赘述了。</p><ul><li>toc：目录，必开，在右边显示一个目录，非常好用，动画做的也很流畅。当然显示的位置也是可以更改的。</li><li>math：可以在网页中渲染 latex语句，我认为是非常有必要的，如果不能插入 latex就只能插入图片，不是那么好看，不过博客也不能追求好看，实用就行，但我是比较完美主义，所以还是想把博客尽量做的好看一些。</li><li>index_img：是网站文章旁边的图片，引人注意用的。这里注意这两个都是单纯的网络链接，不是平成md引用的那种。</li><li>banner_img：就是背景图片。</li></ul><p>别的也没什么好说的了。还有其他的就是看看官方文档，里面基本上都囊括了。</p><h3 id="math-的设置">math 的设置</h3><p>想要使用 latex语法，需要走上几步，我最开始弄的时候做的有些问题，费了点功夫才弄好，这里写下怎么弄的，帮帮别人，也帮帮未来健忘的自己。</p><h4 id="安装相应的环境">安装相应的环境</h4><p>首先进入 hexo 的目录，路径栏点击，输入 cmd，然后就进入控制栏。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122318377.webp" alt="步骤1"><figcaption aria-hidden="true">步骤1</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122318576.webp" alt="步骤2"><figcaption aria-hidden="true">步骤2</figcaption></figure><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122319580.webp" alt="步骤3"><figcaption aria-hidden="true">步骤3</figcaption></figure><p>输入下面代码： <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-pandoc --save<br></code></pre></td></tr></table></figure></p><h4 id="安装-pandoc">安装 pandoc</h4><p>这是一个文档格式转换工具。</p><p>进入该链接 <a href="https://github.com/jgm/pandoc/blob/master/INSTALL.md">pandoc/INSTALL.mdat master · jgm/pandoc (github.com)</a> 点击 download installer，在Assets 中选择适合的进行下载，我选择的是. msi ，msi后缀是安装器的意思。</p><h4 id="注意语法问题">注意语法问题</h4><p>obsidian 中支持一行 latex 的书写就是只用一个美刀的标志包裹，但是 hexo的渲染只支持块 latex的书写，这个使用两个美刀包裹，一上一下，跟代码块差不多，应该就叫 latex块。</p><h4 id="大功告成">大功告成</h4><p>来个智能方程演示下 <span class="math display">\[E = mc^2\]</span> 再来个式子 <span class="math display">\[主 = 6\]</span></p><h1 id="关于-about-的问题">关于 about 的问题</h1><p>这个 about 就是 source文件夹中的<em>about</em>，我最开始以为没什么用处，所以删掉了，结果关于那一页直接报错，没法get 到。真的是容易忽视到。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407122330023.webp" alt="source目录"><figcaption aria-hidden="true">source目录</figcaption></figure><p>还有就是_post 文件夹下面至少得有一篇 md 文件，不然也会报错。</p><h1 id="照片名称渲染">照片名称渲染</h1><p>还是在fluid的配置文件中有关于名称的渲染，可以选择关闭，我这里打开了，感觉更好看一些，但是无疑写博客的速度会变慢，毕竟之前不用写照片的名字，但现在要了。</p><h1 id="其他的渲染问题">其他的渲染问题</h1><p>首先是标题，就是一段文字后必须要空一行再写标题，不然标题不会被 hexo渲染出来。</p><p>同理，如果要分段，那么 md写的时候也是要空一行，不然就会写在同一行里面，例如下面的</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132317062.webp?imageSlim" alt="md中写的样子"><figcaption aria-hidden="true">md中写的样子</figcaption></figure><p><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132317815.webp?imageSlim" alt="渲染出来的样子">原因就是因为我直接打了个回车，其实要打两次回车，也就是两段文字之间要空一行。这个其实是因为obsidian的问题，<strong>它的一个回车跟typora的回车不一样</strong>，所以跟hexo渲染的也不一样。</p><p><em>本质原因是 md 的问题，md语法会自动忽略一个换行符，两个连续的换行符才能实现预览界面的换行。</em></p><p>还有就是照片的名字渲染，有时候没法渲染出来，原因也是因为照片上面直接就有一段文字，而非空一行。</p><h2 id="obsidian解决方法">Obsidian解决方法</h2><p>安装 easy typing 插件。</p><p>最下面的严格换行设置好像有些问题，没法启效果。</p><p>使用上面的格式转化。</p><figure><img src="https://tree-1327913400.cos.ap-nanjing.myqcloud.com/imgs/202407132352621.webp?imageSlim" alt="第二行那个"><figcaption aria-hidden="true">第二行那个</figcaption></figure><p>解决问题，应该吧。</p><h1 id="笔者的话">笔者的话</h1><p>暂时没有了，今天又开始继续写博客了，之前在 wordpress上写，发现不够快捷，真是不如 hexo，所以又转回来了。</p><p>加油，看看能否一天一篇博客。</p><p>写博客还确实是真的费时间啊，一个小时做事，可能得写两个小时博客，不过也是一种复习了。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
